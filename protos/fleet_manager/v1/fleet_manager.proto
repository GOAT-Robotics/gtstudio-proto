syntax = "proto3";

package v1.fleet_manager;

option go_package = "protos/v1/fleet_manager";

service FleetManager {

    rpc CommandStream(stream CommandSteamRequest) returns (stream CommandSteamRespose) {} // Fleet manager (GT-server and each Docker service)

    rpc HerdServices(HerdServiceRequest) returns (HerdServiceResponse) {}  // GT-server to fleet manager

    rpc RobotTelemetry(stream RobotTelemetryData) returns (stream RobotTelemetryResponse) {} // Fleet manager (GT-server and each Docker service)

    rpc HerdTelemetry(stream HerdTelemetryReqest) returns (stream HerdTelemetryResponse) {} // HerdIQ -> Fleet manager -> GT-server

    rpc NavigationTelemetry(stream NavTelemetryRequest) returns (stream NavTelemetryResponse) {} 

}

// Command stream service
enum CommandStreamCommands {
    FLOW_EXECUTE = 0;
    FLOW_CANCEL = 1;
    ROBOT_LIST = 2;
    GET_CONFIGS = 3;
    NAVIGATION = 4; 
    TRIGGER_CHARGER = 5;
    TRIGGER_HOME_CHARGER = 6;
    TRIGGER_EMERGENCY = 7;
}

enum CommandStreamActions {
    CANCEL_GOAL = 0;
    SEND_GOAL = 1;
}

message CommandSteamRequest {
    string slug_name = 1;
    CommandStreamCommands command = 2;
    CommandStreamActions action = 3;
    string device_id = 4;
    string robot = 5;
    string data = 6;
    bool status = 7;
    string message = 8;
    string request_id = 9;
}

message CommandSteamRespose {
    string slug_name = 1;
    CommandStreamCommands command = 2;
    CommandStreamActions action = 3;
    bool status = 4;
    string message = 5;
    string robot = 6;
    string device_id = 7;
    string data = 8;
    string request_id = 9;
}

// Herd Service 
enum HerdActions {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
    START = 3;
    STOP = 4;
    RESTART = 5;
}

message HerdData {
    string slug_name = 1;
    string organization = 2;
    string token = 3;
}

message HerdServiceRequest {
    HerdActions action = 1;
    string device_id = 2;
    HerdData data = 3;
}

message HerdServiceResponseData {
    string slug_name = 1;
    string token = 2;
}

message HerdServiceResponse {
    bool status = 1;
    HerdServiceResponseData data = 2;
    string message = 3;
}

// RobotTelemetry service
message RobotTelemetryData {
    string slug_name = 1;
    string robot = 3;
    string device_id = 4;
    string data = 5;
}

message RobotTelemetryResponse {
    string slug_name = 1;
    string robot = 3;
    string device_id = 4;
    string data = 5;
    bool status = 6;
    string message = 7;
}

// HerdIQ Telemetry (fleet states, dispatch states)
enum HerdTelemetryActions {
    FLEET_STATES = 0;
    DISAPTCH_STATES = 1;
}

message HerdTelemetryReqest {
    string slug_name = 1;
    HerdTelemetryActions action = 2;
    string data = 3;
}

message HerdTelemetryResponse {
    string slug_name = 1;
    HerdTelemetryActions action = 2;
    string data = 3;
    bool status = 4;
    string message = 5;
}

// Navigation telemetry stream
message NavTelemetryRequest {
    string slug_name = 1;
    string robot = 2;
    string device_id = 3;
    string data = 4;
    string status = 5;
    string message = 6;
}

message NavTelemetryResponse {
    string slug_name = 1;
    string robot = 2;
    string device_id = 3;
    string data = 4;
    string status = 5;
    string message = 6;
}