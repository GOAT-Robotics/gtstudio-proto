// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/node_sdk/v1/node_sdk.proto

package rcc

import (
	context "context"
	fmt "fmt"
	model "github.com/TeamDotworld/robotix-proto/protos/v1/model"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceCallReqest struct {
	Request              *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ServiceCallReqest) Reset()         { *m = ServiceCallReqest{} }
func (m *ServiceCallReqest) String() string { return proto.CompactTextString(m) }
func (*ServiceCallReqest) ProtoMessage()    {}
func (*ServiceCallReqest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{0}
}

func (m *ServiceCallReqest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceCallReqest.Unmarshal(m, b)
}
func (m *ServiceCallReqest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceCallReqest.Marshal(b, m, deterministic)
}
func (m *ServiceCallReqest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceCallReqest.Merge(m, src)
}
func (m *ServiceCallReqest) XXX_Size() int {
	return xxx_messageInfo_ServiceCallReqest.Size(m)
}
func (m *ServiceCallReqest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceCallReqest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceCallReqest proto.InternalMessageInfo

func (m *ServiceCallReqest) GetRequest() *model.CommandRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type ServiceCallResponse struct {
	Response             *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ServiceCallResponse) Reset()         { *m = ServiceCallResponse{} }
func (m *ServiceCallResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceCallResponse) ProtoMessage()    {}
func (*ServiceCallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{1}
}

func (m *ServiceCallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceCallResponse.Unmarshal(m, b)
}
func (m *ServiceCallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceCallResponse.Marshal(b, m, deterministic)
}
func (m *ServiceCallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceCallResponse.Merge(m, src)
}
func (m *ServiceCallResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceCallResponse.Size(m)
}
func (m *ServiceCallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceCallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceCallResponse proto.InternalMessageInfo

func (m *ServiceCallResponse) GetResponse() *model.CommandResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type ActionCallReqest struct {
	Request              *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ActionCallReqest) Reset()         { *m = ActionCallReqest{} }
func (m *ActionCallReqest) String() string { return proto.CompactTextString(m) }
func (*ActionCallReqest) ProtoMessage()    {}
func (*ActionCallReqest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{2}
}

func (m *ActionCallReqest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionCallReqest.Unmarshal(m, b)
}
func (m *ActionCallReqest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionCallReqest.Marshal(b, m, deterministic)
}
func (m *ActionCallReqest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionCallReqest.Merge(m, src)
}
func (m *ActionCallReqest) XXX_Size() int {
	return xxx_messageInfo_ActionCallReqest.Size(m)
}
func (m *ActionCallReqest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionCallReqest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionCallReqest proto.InternalMessageInfo

func (m *ActionCallReqest) GetRequest() *model.CommandRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type ActionCallResponse struct {
	Response             *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ActionCallResponse) Reset()         { *m = ActionCallResponse{} }
func (m *ActionCallResponse) String() string { return proto.CompactTextString(m) }
func (*ActionCallResponse) ProtoMessage()    {}
func (*ActionCallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{3}
}

func (m *ActionCallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionCallResponse.Unmarshal(m, b)
}
func (m *ActionCallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionCallResponse.Marshal(b, m, deterministic)
}
func (m *ActionCallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionCallResponse.Merge(m, src)
}
func (m *ActionCallResponse) XXX_Size() int {
	return xxx_messageInfo_ActionCallResponse.Size(m)
}
func (m *ActionCallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionCallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionCallResponse proto.InternalMessageInfo

func (m *ActionCallResponse) GetResponse() *model.CommandResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type SubscribeRequest struct {
	Topic                *model.StreamConfiguration `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{4}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopic() *model.StreamConfiguration {
	if m != nil {
		return m.Topic
	}
	return nil
}

type SubscribeResponse struct {
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{5}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *SubscribeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type UnsubscribeRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeRequest) Reset()         { *m = UnsubscribeRequest{} }
func (m *UnsubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeRequest) ProtoMessage()    {}
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{6}
}

func (m *UnsubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeRequest.Unmarshal(m, b)
}
func (m *UnsubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeRequest.Marshal(b, m, deterministic)
}
func (m *UnsubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeRequest.Merge(m, src)
}
func (m *UnsubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeRequest.Size(m)
}
func (m *UnsubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeRequest proto.InternalMessageInfo

func (m *UnsubscribeRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

type UnsubscribeResponse struct {
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeResponse) Reset()         { *m = UnsubscribeResponse{} }
func (m *UnsubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeResponse) ProtoMessage()    {}
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{7}
}

func (m *UnsubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeResponse.Unmarshal(m, b)
}
func (m *UnsubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeResponse.Marshal(b, m, deterministic)
}
func (m *UnsubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeResponse.Merge(m, src)
}
func (m *UnsubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeResponse.Size(m)
}
func (m *UnsubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeResponse proto.InternalMessageInfo

func (m *UnsubscribeResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *UnsubscribeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetTopicsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopicsRequest) Reset()         { *m = GetTopicsRequest{} }
func (m *GetTopicsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopicsRequest) ProtoMessage()    {}
func (*GetTopicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{8}
}

func (m *GetTopicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicsRequest.Unmarshal(m, b)
}
func (m *GetTopicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicsRequest.Marshal(b, m, deterministic)
}
func (m *GetTopicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicsRequest.Merge(m, src)
}
func (m *GetTopicsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopicsRequest.Size(m)
}
func (m *GetTopicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicsRequest proto.InternalMessageInfo

type GetTopicsResponse struct {
	Status               bool              `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*model.ROSTopic `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetTopicsResponse) Reset()         { *m = GetTopicsResponse{} }
func (m *GetTopicsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTopicsResponse) ProtoMessage()    {}
func (*GetTopicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{9}
}

func (m *GetTopicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopicsResponse.Unmarshal(m, b)
}
func (m *GetTopicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopicsResponse.Marshal(b, m, deterministic)
}
func (m *GetTopicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopicsResponse.Merge(m, src)
}
func (m *GetTopicsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTopicsResponse.Size(m)
}
func (m *GetTopicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopicsResponse proto.InternalMessageInfo

func (m *GetTopicsResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *GetTopicsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetTopicsResponse) GetData() []*model.ROSTopic {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetSubscrbedTopicsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubscrbedTopicsRequest) Reset()         { *m = GetSubscrbedTopicsRequest{} }
func (m *GetSubscrbedTopicsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubscrbedTopicsRequest) ProtoMessage()    {}
func (*GetSubscrbedTopicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{10}
}

func (m *GetSubscrbedTopicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscrbedTopicsRequest.Unmarshal(m, b)
}
func (m *GetSubscrbedTopicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscrbedTopicsRequest.Marshal(b, m, deterministic)
}
func (m *GetSubscrbedTopicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscrbedTopicsRequest.Merge(m, src)
}
func (m *GetSubscrbedTopicsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubscrbedTopicsRequest.Size(m)
}
func (m *GetSubscrbedTopicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscrbedTopicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscrbedTopicsRequest proto.InternalMessageInfo

type GetSubscrbedTopicsResponse struct {
	Status               bool              `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string            `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Data                 []*model.ROSTopic `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetSubscrbedTopicsResponse) Reset()         { *m = GetSubscrbedTopicsResponse{} }
func (m *GetSubscrbedTopicsResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubscrbedTopicsResponse) ProtoMessage()    {}
func (*GetSubscrbedTopicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{11}
}

func (m *GetSubscrbedTopicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscrbedTopicsResponse.Unmarshal(m, b)
}
func (m *GetSubscrbedTopicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscrbedTopicsResponse.Marshal(b, m, deterministic)
}
func (m *GetSubscrbedTopicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscrbedTopicsResponse.Merge(m, src)
}
func (m *GetSubscrbedTopicsResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubscrbedTopicsResponse.Size(m)
}
func (m *GetSubscrbedTopicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscrbedTopicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscrbedTopicsResponse proto.InternalMessageInfo

func (m *GetSubscrbedTopicsResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *GetSubscrbedTopicsResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GetSubscrbedTopicsResponse) GetData() []*model.ROSTopic {
	if m != nil {
		return m.Data
	}
	return nil
}

type PublishRequest struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ControlDatapoint     *model.ControlDatapoint `protobuf:"bytes,2,opt,name=control_datapoint,json=controlDatapoint,proto3" json:"control_datapoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{12}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PublishRequest) GetControlDatapoint() *model.ControlDatapoint {
	if m != nil {
		return m.ControlDatapoint
	}
	return nil
}

type PublishResponse struct {
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5d257646a7dec8f, []int{13}
}

func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (m *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(m, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

func (m *PublishResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *PublishResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceCallReqest)(nil), "v1.rcc.ServiceCallReqest")
	proto.RegisterType((*ServiceCallResponse)(nil), "v1.rcc.ServiceCallResponse")
	proto.RegisterType((*ActionCallReqest)(nil), "v1.rcc.ActionCallReqest")
	proto.RegisterType((*ActionCallResponse)(nil), "v1.rcc.ActionCallResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "v1.rcc.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "v1.rcc.SubscribeResponse")
	proto.RegisterType((*UnsubscribeRequest)(nil), "v1.rcc.UnsubscribeRequest")
	proto.RegisterType((*UnsubscribeResponse)(nil), "v1.rcc.UnsubscribeResponse")
	proto.RegisterType((*GetTopicsRequest)(nil), "v1.rcc.GetTopicsRequest")
	proto.RegisterType((*GetTopicsResponse)(nil), "v1.rcc.GetTopicsResponse")
	proto.RegisterType((*GetSubscrbedTopicsRequest)(nil), "v1.rcc.GetSubscrbedTopicsRequest")
	proto.RegisterType((*GetSubscrbedTopicsResponse)(nil), "v1.rcc.GetSubscrbedTopicsResponse")
	proto.RegisterType((*PublishRequest)(nil), "v1.rcc.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "v1.rcc.PublishResponse")
}

func init() { proto.RegisterFile("protos/node_sdk/v1/node_sdk.proto", fileDescriptor_c5d257646a7dec8f) }

var fileDescriptor_c5d257646a7dec8f = []byte{
	// 606 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5b, 0x6f, 0xd3, 0x30,
	0x18, 0x5d, 0x76, 0xdf, 0x57, 0x69, 0xb4, 0xee, 0x34, 0xd2, 0x8c, 0x4b, 0x97, 0x07, 0x54, 0x21,
	0x91, 0xd2, 0x56, 0x7b, 0x43, 0x42, 0x5b, 0xa7, 0x05, 0x09, 0x04, 0x28, 0x1d, 0x2f, 0x3c, 0x30,
	0x25, 0x8e, 0xd9, 0xac, 0x25, 0x71, 0x67, 0x3b, 0x85, 0xdf, 0xc0, 0xaf, 0x46, 0x49, 0x9c, 0x4b,
	0xd3, 0x88, 0x87, 0x4e, 0xbc, 0x25, 0x3e, 0xc7, 0xe7, 0x3b, 0x71, 0xcf, 0xa9, 0xe1, 0x74, 0xce,
	0x99, 0x64, 0x62, 0x18, 0x31, 0x9f, 0xdc, 0x08, 0xff, 0x7e, 0xb8, 0x18, 0x15, 0xcf, 0x56, 0x8a,
	0xa1, 0xdd, 0xc5, 0xc8, 0xe2, 0x18, 0x1b, 0x2f, 0x14, 0x35, 0x64, 0x3e, 0x09, 0x12, 0x1e, 0x66,
	0x61, 0xe8, 0x46, 0xbe, 0xc8, 0x78, 0xc6, 0xb3, 0x55, 0x3c, 0xfa, 0x49, 0x6f, 0x15, 0xda, 0xab,
	0xa3, 0x9c, 0xe5, 0x1b, 0x5f, 0xd6, 0x21, 0xdf, 0x95, 0xee, 0x9c, 0xd1, 0x48, 0x66, 0x04, 0xd3,
	0x86, 0xce, 0x8c, 0xf0, 0x05, 0xc5, 0x64, 0xea, 0x06, 0x81, 0x43, 0x1e, 0x88, 0x90, 0x68, 0x0c,
	0x7b, 0x9c, 0x3c, 0xc4, 0x44, 0x48, 0x5d, 0xeb, 0x6b, 0x83, 0xd6, 0x58, 0xb7, 0x16, 0x23, 0x2b,
	0xd5, 0xb0, 0xa6, 0x99, 0x33, 0x27, 0xc3, 0x9d, 0x9c, 0x68, 0x7e, 0x82, 0xee, 0x92, 0x90, 0x98,
	0xb3, 0x48, 0x10, 0x74, 0x06, 0xfb, 0x5c, 0x3d, 0x2b, 0xad, 0x5e, 0x83, 0x56, 0x46, 0x70, 0x0a,
	0xaa, 0x79, 0x05, 0xed, 0x73, 0x2c, 0x29, 0x8b, 0x1e, 0xe9, 0xea, 0x23, 0xa0, 0xaa, 0xce, 0xe3,
	0x4c, 0xd9, 0xd0, 0x9e, 0xc5, 0x9e, 0xc0, 0x9c, 0x7a, 0x44, 0x4d, 0x42, 0x13, 0xd8, 0x91, 0x6c,
	0x4e, 0xb1, 0xd2, 0x79, 0x5e, 0xea, 0xcc, 0x24, 0x27, 0x6e, 0x38, 0x4d, 0x7f, 0xa8, 0x98, 0xbb,
	0x89, 0x09, 0x27, 0xe3, 0x9a, 0xe7, 0xd0, 0xa9, 0x08, 0x29, 0x53, 0xc7, 0xb0, 0x2b, 0xa4, 0x2b,
	0x63, 0xa1, 0x6f, 0xf6, 0xb5, 0xc1, 0xbe, 0xa3, 0xde, 0xd0, 0x11, 0xec, 0x10, 0xce, 0x19, 0xd7,
	0xb7, 0xfa, 0xda, 0xe0, 0xc0, 0xc9, 0x5e, 0xcc, 0xd7, 0x80, 0xbe, 0x45, 0xa2, 0xee, 0xe6, 0xa8,
	0xea, 0xe6, 0x20, 0x1f, 0x37, 0x85, 0xee, 0x12, 0x77, 0xad, 0x81, 0x08, 0xda, 0x36, 0x91, 0xd7,
	0x89, 0xa0, 0x50, 0xe3, 0x4c, 0x0a, 0x9d, 0xca, 0xda, 0x3a, 0xb2, 0xe8, 0x15, 0x6c, 0x27, 0x91,
	0xd4, 0xb5, 0xfe, 0xd6, 0xa0, 0x35, 0x46, 0xe5, 0xf1, 0x39, 0x5f, 0x66, 0xa9, 0xb0, 0x93, 0xe2,
	0xe6, 0x09, 0xf4, 0x6c, 0x22, 0xb3, 0x53, 0xf3, 0x88, 0xbf, 0xec, 0x83, 0x83, 0xd1, 0x04, 0xfe,
	0x57, 0x43, 0x14, 0x0e, 0xbf, 0xc6, 0x5e, 0x40, 0xc5, 0x5d, 0x7e, 0xf8, 0x87, 0xb0, 0x49, 0x7d,
	0x75, 0xf2, 0x9b, 0xd4, 0x47, 0x36, 0x74, 0x30, 0x8b, 0x24, 0x67, 0xc1, 0x4d, 0xd1, 0xba, 0xd4,
	0x42, 0x6b, 0x6c, 0x54, 0xe3, 0x96, 0x52, 0x2e, 0x73, 0x86, 0xd3, 0xc6, 0xb5, 0x15, 0xf3, 0x3d,
	0x3c, 0x29, 0x46, 0xad, 0xf3, 0x4d, 0xe3, 0x3f, 0xdb, 0xb0, 0xf7, 0x99, 0xf9, 0x64, 0xe6, 0xdf,
	0x23, 0x1b, 0x5a, 0x95, 0x9e, 0xa2, 0x34, 0xf8, 0x1c, 0x63, 0x6b, 0xe5, 0x5f, 0xc0, 0x38, 0x69,
	0x84, 0x54, 0x17, 0x36, 0xd0, 0x15, 0x40, 0x59, 0x2d, 0xa4, 0xe7, 0xe4, 0x7a, 0x6d, 0x0d, 0xa3,
	0x09, 0xc9, 0x55, 0xde, 0x6a, 0xe8, 0x02, 0x0e, 0x8a, 0x32, 0x94, 0x32, 0xf5, 0xa2, 0x19, 0xbd,
	0x06, 0xa4, 0xf0, 0xf2, 0x01, 0x5a, 0x95, 0x84, 0xa3, 0x62, 0xe4, 0x6a, 0x45, 0xca, 0xaf, 0x6a,
	0xa8, 0x84, 0xb9, 0x91, 0xb8, 0x29, 0x22, 0x5d, 0xba, 0xa9, 0x27, 0xbf, 0x74, 0xb3, 0x92, 0x7f,
	0x73, 0x03, 0xfd, 0x80, 0x6e, 0x11, 0x47, 0x5a, 0xe4, 0x11, 0x9d, 0x56, 0xf6, 0x34, 0x07, 0xd9,
	0x30, 0xff, 0x45, 0x29, 0xf4, 0xdf, 0xc1, 0x9e, 0xca, 0x03, 0x3a, 0xce, 0x37, 0x2c, 0x67, 0xd1,
	0x78, 0xba, 0xb2, 0x9e, 0xef, 0xbe, 0x38, 0xfb, 0x3e, 0xb9, 0xa5, 0xf2, 0x2e, 0xf6, 0x2c, 0xcc,
	0xc2, 0xe1, 0x35, 0x71, 0xc3, 0x4b, 0x26, 0x7f, 0x31, 0x1e, 0xf8, 0x43, 0xce, 0x3c, 0x26, 0xe9,
	0xef, 0x37, 0xe9, 0xd5, 0x30, 0x54, 0x57, 0x47, 0x72, 0x9f, 0x60, 0xec, 0xed, 0xa6, 0xaf, 0x93,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9e, 0x8d, 0xd1, 0x58, 0xd6, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeSdkClient is the client API for NodeSdk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeSdkClient interface {
	ServiceCall(ctx context.Context, in *ServiceCallReqest, opts ...grpc.CallOption) (*ServiceCallResponse, error)
	ActionCall(ctx context.Context, in *ActionCallReqest, opts ...grpc.CallOption) (NodeSdk_ActionCallClient, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*UnsubscribeResponse, error)
	GetTopics(ctx context.Context, in *GetTopicsRequest, opts ...grpc.CallOption) (*GetTopicsResponse, error)
	GetSubscribedTopics(ctx context.Context, in *GetSubscrbedTopicsRequest, opts ...grpc.CallOption) (*GetSubscrbedTopicsResponse, error)
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
}

type nodeSdkClient struct {
	cc *grpc.ClientConn
}

func NewNodeSdkClient(cc *grpc.ClientConn) NodeSdkClient {
	return &nodeSdkClient{cc}
}

func (c *nodeSdkClient) ServiceCall(ctx context.Context, in *ServiceCallReqest, opts ...grpc.CallOption) (*ServiceCallResponse, error) {
	out := new(ServiceCallResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/ServiceCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) ActionCall(ctx context.Context, in *ActionCallReqest, opts ...grpc.CallOption) (NodeSdk_ActionCallClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeSdk_serviceDesc.Streams[0], "/v1.rcc.NodeSdk/ActionCall", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeSdkActionCallClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeSdk_ActionCallClient interface {
	Recv() (*ActionCallResponse, error)
	grpc.ClientStream
}

type nodeSdkActionCallClient struct {
	grpc.ClientStream
}

func (x *nodeSdkActionCallClient) Recv() (*ActionCallResponse, error) {
	m := new(ActionCallResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeSdkClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error) {
	out := new(SubscribeResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*UnsubscribeResponse, error) {
	out := new(UnsubscribeResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) GetTopics(ctx context.Context, in *GetTopicsRequest, opts ...grpc.CallOption) (*GetTopicsResponse, error) {
	out := new(GetTopicsResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/GetTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) GetSubscribedTopics(ctx context.Context, in *GetSubscrbedTopicsRequest, opts ...grpc.CallOption) (*GetSubscrbedTopicsResponse, error) {
	out := new(GetSubscrbedTopicsResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/GetSubscribedTopics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeSdkServer is the server API for NodeSdk service.
type NodeSdkServer interface {
	ServiceCall(context.Context, *ServiceCallReqest) (*ServiceCallResponse, error)
	ActionCall(*ActionCallReqest, NodeSdk_ActionCallServer) error
	Subscribe(context.Context, *SubscribeRequest) (*SubscribeResponse, error)
	Unsubscribe(context.Context, *UnsubscribeRequest) (*UnsubscribeResponse, error)
	GetTopics(context.Context, *GetTopicsRequest) (*GetTopicsResponse, error)
	GetSubscribedTopics(context.Context, *GetSubscrbedTopicsRequest) (*GetSubscrbedTopicsResponse, error)
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
}

// UnimplementedNodeSdkServer can be embedded to have forward compatible implementations.
type UnimplementedNodeSdkServer struct {
}

func (*UnimplementedNodeSdkServer) ServiceCall(ctx context.Context, req *ServiceCallReqest) (*ServiceCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceCall not implemented")
}
func (*UnimplementedNodeSdkServer) ActionCall(req *ActionCallReqest, srv NodeSdk_ActionCallServer) error {
	return status.Errorf(codes.Unimplemented, "method ActionCall not implemented")
}
func (*UnimplementedNodeSdkServer) Subscribe(ctx context.Context, req *SubscribeRequest) (*SubscribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedNodeSdkServer) Unsubscribe(ctx context.Context, req *UnsubscribeRequest) (*UnsubscribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}
func (*UnimplementedNodeSdkServer) GetTopics(ctx context.Context, req *GetTopicsRequest) (*GetTopicsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopics not implemented")
}
func (*UnimplementedNodeSdkServer) GetSubscribedTopics(ctx context.Context, req *GetSubscrbedTopicsRequest) (*GetSubscrbedTopicsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSubscribedTopics not implemented")
}
func (*UnimplementedNodeSdkServer) Publish(ctx context.Context, req *PublishRequest) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Publish not implemented")
}

func RegisterNodeSdkServer(s *grpc.Server, srv NodeSdkServer) {
	s.RegisterService(&_NodeSdk_serviceDesc, srv)
}

func _NodeSdk_ServiceCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceCallReqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).ServiceCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/ServiceCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).ServiceCall(ctx, req.(*ServiceCallReqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_ActionCall_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActionCallReqest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeSdkServer).ActionCall(m, &nodeSdkActionCallServer{stream})
}

type NodeSdk_ActionCallServer interface {
	Send(*ActionCallResponse) error
	grpc.ServerStream
}

type nodeSdkActionCallServer struct {
	grpc.ServerStream
}

func (x *nodeSdkActionCallServer) Send(m *ActionCallResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeSdk_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).Unsubscribe(ctx, req.(*UnsubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_GetTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).GetTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/GetTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).GetTopics(ctx, req.(*GetTopicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_GetSubscribedTopics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubscrbedTopicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).GetSubscribedTopics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/GetSubscribedTopics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).GetSubscribedTopics(ctx, req.(*GetSubscrbedTopicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeSdk_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.rcc.NodeSdk",
	HandlerType: (*NodeSdkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceCall",
			Handler:    _NodeSdk_ServiceCall_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _NodeSdk_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _NodeSdk_Unsubscribe_Handler,
		},
		{
			MethodName: "GetTopics",
			Handler:    _NodeSdk_GetTopics_Handler,
		},
		{
			MethodName: "GetSubscribedTopics",
			Handler:    _NodeSdk_GetSubscribedTopics_Handler,
		},
		{
			MethodName: "Publish",
			Handler:    _NodeSdk_Publish_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ActionCall",
			Handler:       _NodeSdk_ActionCall_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/node_sdk/v1/node_sdk.proto",
}
