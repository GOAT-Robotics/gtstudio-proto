// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.6.1
// source: protos/node_sdk/v1/node_sdk.proto

package rcc

import (
	context "context"
	model "github.com/TeamDotworld/robotix-proto/protos/v1/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceCallReqest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ServiceCallReqest) Reset() {
	*x = ServiceCallReqest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceCallReqest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceCallReqest) ProtoMessage() {}

func (x *ServiceCallReqest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceCallReqest.ProtoReflect.Descriptor instead.
func (*ServiceCallReqest) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceCallReqest) GetRequest() *model.CommandRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ServiceCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ServiceCallResponse) Reset() {
	*x = ServiceCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceCallResponse) ProtoMessage() {}

func (x *ServiceCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceCallResponse.ProtoReflect.Descriptor instead.
func (*ServiceCallResponse) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceCallResponse) GetResponse() *model.CommandResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type ActionCallReqest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ActionCallReqest) Reset() {
	*x = ActionCallReqest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCallReqest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCallReqest) ProtoMessage() {}

func (x *ActionCallReqest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCallReqest.ProtoReflect.Descriptor instead.
func (*ActionCallReqest) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{2}
}

func (x *ActionCallReqest) GetRequest() *model.CommandRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ActionCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionCallResponse) Reset() {
	*x = ActionCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCallResponse) ProtoMessage() {}

func (x *ActionCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCallResponse.ProtoReflect.Descriptor instead.
func (*ActionCallResponse) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{3}
}

func (x *ActionCallResponse) GetResponse() *model.CommandResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *model.StreamConfiguration `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeRequest) GetTopic() *model.StreamConfiguration {
	if x != nil {
		return x.Topic
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SubscribeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *UnsubscribeRequest) Reset() {
	*x = UnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeRequest) ProtoMessage() {}

func (x *UnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{6}
}

func (x *UnsubscribeRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type UnsubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UnsubscribeResponse) Reset() {
	*x = UnsubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeResponse) ProtoMessage() {}

func (x *UnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{7}
}

func (x *UnsubscribeResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *UnsubscribeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetTopicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTopicsRequest) Reset() {
	*x = GetTopicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsRequest) ProtoMessage() {}

func (x *GetTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsRequest.ProtoReflect.Descriptor instead.
func (*GetTopicsRequest) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{8}
}

type GetTopicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*model.ROSTopic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *GetTopicsResponse) Reset() {
	*x = GetTopicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsResponse) ProtoMessage() {}

func (x *GetTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsResponse.ProtoReflect.Descriptor instead.
func (*GetTopicsResponse) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{9}
}

func (x *GetTopicsResponse) GetTopics() []*model.ROSTopic {
	if x != nil {
		return x.Topics
	}
	return nil
}

type GetSubscrbedTopicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSubscrbedTopicsRequest) Reset() {
	*x = GetSubscrbedTopicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscrbedTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscrbedTopicsRequest) ProtoMessage() {}

func (x *GetSubscrbedTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscrbedTopicsRequest.ProtoReflect.Descriptor instead.
func (*GetSubscrbedTopicsRequest) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{10}
}

type GetSubscrbedTopicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topics []*model.ROSTopic `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *GetSubscrbedTopicsResponse) Reset() {
	*x = GetSubscrbedTopicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscrbedTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscrbedTopicsResponse) ProtoMessage() {}

func (x *GetSubscrbedTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_node_sdk_v1_node_sdk_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscrbedTopicsResponse.ProtoReflect.Descriptor instead.
func (*GetSubscrbedTopicsResponse) Descriptor() ([]byte, []int) {
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP(), []int{11}
}

func (x *GetSubscrbedTopicsResponse) GetTopics() []*model.ROSTopic {
	if x != nil {
		return x.Topics
	}
	return nil
}

var File_protos_node_sdk_v1_node_sdk_proto protoreflect.FileDescriptor

var file_protos_node_sdk_v1_node_sdk_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x64,
	0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x1a, 0x1e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4c, 0x0a,
	0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x46, 0x0a, 0x10, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x47, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x41, 0x0a, 0x11, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2a, 0x0a, 0x12,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0x43, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x12, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x62,
	0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x48, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x62, 0x65, 0x64, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x4f, 0x53, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x32, 0xcf, 0x03, 0x0a, 0x07, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x64, 0x6b, 0x12, 0x47, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x18, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x63, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x73, 0x12, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5f, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x12, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x62, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x35, 0x5a, 0x33, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x6f,
	0x74, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x78, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x63, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_node_sdk_v1_node_sdk_proto_rawDescOnce sync.Once
	file_protos_node_sdk_v1_node_sdk_proto_rawDescData = file_protos_node_sdk_v1_node_sdk_proto_rawDesc
)

func file_protos_node_sdk_v1_node_sdk_proto_rawDescGZIP() []byte {
	file_protos_node_sdk_v1_node_sdk_proto_rawDescOnce.Do(func() {
		file_protos_node_sdk_v1_node_sdk_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_node_sdk_v1_node_sdk_proto_rawDescData)
	})
	return file_protos_node_sdk_v1_node_sdk_proto_rawDescData
}

var file_protos_node_sdk_v1_node_sdk_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protos_node_sdk_v1_node_sdk_proto_goTypes = []interface{}{
	(*ServiceCallReqest)(nil),          // 0: v1.rcc.ServiceCallReqest
	(*ServiceCallResponse)(nil),        // 1: v1.rcc.ServiceCallResponse
	(*ActionCallReqest)(nil),           // 2: v1.rcc.ActionCallReqest
	(*ActionCallResponse)(nil),         // 3: v1.rcc.ActionCallResponse
	(*SubscribeRequest)(nil),           // 4: v1.rcc.SubscribeRequest
	(*SubscribeResponse)(nil),          // 5: v1.rcc.SubscribeResponse
	(*UnsubscribeRequest)(nil),         // 6: v1.rcc.UnsubscribeRequest
	(*UnsubscribeResponse)(nil),        // 7: v1.rcc.UnsubscribeResponse
	(*GetTopicsRequest)(nil),           // 8: v1.rcc.GetTopicsRequest
	(*GetTopicsResponse)(nil),          // 9: v1.rcc.GetTopicsResponse
	(*GetSubscrbedTopicsRequest)(nil),  // 10: v1.rcc.GetSubscrbedTopicsRequest
	(*GetSubscrbedTopicsResponse)(nil), // 11: v1.rcc.GetSubscrbedTopicsResponse
	(*model.CommandRequest)(nil),       // 12: v1.model.CommandRequest
	(*model.CommandResponse)(nil),      // 13: v1.model.CommandResponse
	(*model.StreamConfiguration)(nil),  // 14: v1.model.StreamConfiguration
	(*model.ROSTopic)(nil),             // 15: v1.model.ROSTopic
}
var file_protos_node_sdk_v1_node_sdk_proto_depIdxs = []int32{
	12, // 0: v1.rcc.ServiceCallReqest.request:type_name -> v1.model.CommandRequest
	13, // 1: v1.rcc.ServiceCallResponse.response:type_name -> v1.model.CommandResponse
	12, // 2: v1.rcc.ActionCallReqest.request:type_name -> v1.model.CommandRequest
	13, // 3: v1.rcc.ActionCallResponse.response:type_name -> v1.model.CommandResponse
	14, // 4: v1.rcc.SubscribeRequest.topic:type_name -> v1.model.StreamConfiguration
	15, // 5: v1.rcc.GetTopicsResponse.topics:type_name -> v1.model.ROSTopic
	15, // 6: v1.rcc.GetSubscrbedTopicsResponse.topics:type_name -> v1.model.ROSTopic
	0,  // 7: v1.rcc.NodeSdk.ServiceCall:input_type -> v1.rcc.ServiceCallReqest
	2,  // 8: v1.rcc.NodeSdk.ActionCall:input_type -> v1.rcc.ActionCallReqest
	4,  // 9: v1.rcc.NodeSdk.Subscribe:input_type -> v1.rcc.SubscribeRequest
	6,  // 10: v1.rcc.NodeSdk.Unsubscribe:input_type -> v1.rcc.UnsubscribeRequest
	8,  // 11: v1.rcc.NodeSdk.GetTopics:input_type -> v1.rcc.GetTopicsRequest
	10, // 12: v1.rcc.NodeSdk.GetSubscrbedTopics:input_type -> v1.rcc.GetSubscrbedTopicsRequest
	1,  // 13: v1.rcc.NodeSdk.ServiceCall:output_type -> v1.rcc.ServiceCallResponse
	3,  // 14: v1.rcc.NodeSdk.ActionCall:output_type -> v1.rcc.ActionCallResponse
	5,  // 15: v1.rcc.NodeSdk.Subscribe:output_type -> v1.rcc.SubscribeResponse
	7,  // 16: v1.rcc.NodeSdk.Unsubscribe:output_type -> v1.rcc.UnsubscribeResponse
	9,  // 17: v1.rcc.NodeSdk.GetTopics:output_type -> v1.rcc.GetTopicsResponse
	11, // 18: v1.rcc.NodeSdk.GetSubscrbedTopics:output_type -> v1.rcc.GetSubscrbedTopicsResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protos_node_sdk_v1_node_sdk_proto_init() }
func file_protos_node_sdk_v1_node_sdk_proto_init() {
	if File_protos_node_sdk_v1_node_sdk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceCallReqest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCallReqest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscrbedTopicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_node_sdk_v1_node_sdk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscrbedTopicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_node_sdk_v1_node_sdk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_node_sdk_v1_node_sdk_proto_goTypes,
		DependencyIndexes: file_protos_node_sdk_v1_node_sdk_proto_depIdxs,
		MessageInfos:      file_protos_node_sdk_v1_node_sdk_proto_msgTypes,
	}.Build()
	File_protos_node_sdk_v1_node_sdk_proto = out.File
	file_protos_node_sdk_v1_node_sdk_proto_rawDesc = nil
	file_protos_node_sdk_v1_node_sdk_proto_goTypes = nil
	file_protos_node_sdk_v1_node_sdk_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeSdkClient is the client API for NodeSdk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeSdkClient interface {
	ServiceCall(ctx context.Context, in *ServiceCallReqest, opts ...grpc.CallOption) (*ServiceCallResponse, error)
	ActionCall(ctx context.Context, in *ActionCallReqest, opts ...grpc.CallOption) (NodeSdk_ActionCallClient, error)
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*UnsubscribeResponse, error)
	GetTopics(ctx context.Context, in *GetTopicsRequest, opts ...grpc.CallOption) (NodeSdk_GetTopicsClient, error)
	GetSubscrbedTopics(ctx context.Context, in *GetSubscrbedTopicsRequest, opts ...grpc.CallOption) (NodeSdk_GetSubscrbedTopicsClient, error)
}

type nodeSdkClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeSdkClient(cc grpc.ClientConnInterface) NodeSdkClient {
	return &nodeSdkClient{cc}
}

func (c *nodeSdkClient) ServiceCall(ctx context.Context, in *ServiceCallReqest, opts ...grpc.CallOption) (*ServiceCallResponse, error) {
	out := new(ServiceCallResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/ServiceCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) ActionCall(ctx context.Context, in *ActionCallReqest, opts ...grpc.CallOption) (NodeSdk_ActionCallClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeSdk_serviceDesc.Streams[0], "/v1.rcc.NodeSdk/ActionCall", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeSdkActionCallClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeSdk_ActionCallClient interface {
	Recv() (*ActionCallResponse, error)
	grpc.ClientStream
}

type nodeSdkActionCallClient struct {
	grpc.ClientStream
}

func (x *nodeSdkActionCallClient) Recv() (*ActionCallResponse, error) {
	m := new(ActionCallResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeSdkClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error) {
	out := new(SubscribeResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) Unsubscribe(ctx context.Context, in *UnsubscribeRequest, opts ...grpc.CallOption) (*UnsubscribeResponse, error) {
	out := new(UnsubscribeResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.NodeSdk/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeSdkClient) GetTopics(ctx context.Context, in *GetTopicsRequest, opts ...grpc.CallOption) (NodeSdk_GetTopicsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeSdk_serviceDesc.Streams[1], "/v1.rcc.NodeSdk/GetTopics", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeSdkGetTopicsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeSdk_GetTopicsClient interface {
	Recv() (*GetTopicsResponse, error)
	grpc.ClientStream
}

type nodeSdkGetTopicsClient struct {
	grpc.ClientStream
}

func (x *nodeSdkGetTopicsClient) Recv() (*GetTopicsResponse, error) {
	m := new(GetTopicsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeSdkClient) GetSubscrbedTopics(ctx context.Context, in *GetSubscrbedTopicsRequest, opts ...grpc.CallOption) (NodeSdk_GetSubscrbedTopicsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeSdk_serviceDesc.Streams[2], "/v1.rcc.NodeSdk/GetSubscrbedTopics", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeSdkGetSubscrbedTopicsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeSdk_GetSubscrbedTopicsClient interface {
	Recv() (*GetSubscrbedTopicsResponse, error)
	grpc.ClientStream
}

type nodeSdkGetSubscrbedTopicsClient struct {
	grpc.ClientStream
}

func (x *nodeSdkGetSubscrbedTopicsClient) Recv() (*GetSubscrbedTopicsResponse, error) {
	m := new(GetSubscrbedTopicsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NodeSdkServer is the server API for NodeSdk service.
type NodeSdkServer interface {
	ServiceCall(context.Context, *ServiceCallReqest) (*ServiceCallResponse, error)
	ActionCall(*ActionCallReqest, NodeSdk_ActionCallServer) error
	Subscribe(context.Context, *SubscribeRequest) (*SubscribeResponse, error)
	Unsubscribe(context.Context, *UnsubscribeRequest) (*UnsubscribeResponse, error)
	GetTopics(*GetTopicsRequest, NodeSdk_GetTopicsServer) error
	GetSubscrbedTopics(*GetSubscrbedTopicsRequest, NodeSdk_GetSubscrbedTopicsServer) error
}

// UnimplementedNodeSdkServer can be embedded to have forward compatible implementations.
type UnimplementedNodeSdkServer struct {
}

func (*UnimplementedNodeSdkServer) ServiceCall(context.Context, *ServiceCallReqest) (*ServiceCallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServiceCall not implemented")
}
func (*UnimplementedNodeSdkServer) ActionCall(*ActionCallReqest, NodeSdk_ActionCallServer) error {
	return status.Errorf(codes.Unimplemented, "method ActionCall not implemented")
}
func (*UnimplementedNodeSdkServer) Subscribe(context.Context, *SubscribeRequest) (*SubscribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedNodeSdkServer) Unsubscribe(context.Context, *UnsubscribeRequest) (*UnsubscribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}
func (*UnimplementedNodeSdkServer) GetTopics(*GetTopicsRequest, NodeSdk_GetTopicsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetTopics not implemented")
}
func (*UnimplementedNodeSdkServer) GetSubscrbedTopics(*GetSubscrbedTopicsRequest, NodeSdk_GetSubscrbedTopicsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSubscrbedTopics not implemented")
}

func RegisterNodeSdkServer(s *grpc.Server, srv NodeSdkServer) {
	s.RegisterService(&_NodeSdk_serviceDesc, srv)
}

func _NodeSdk_ServiceCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceCallReqest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).ServiceCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/ServiceCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).ServiceCall(ctx, req.(*ServiceCallReqest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_ActionCall_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActionCallReqest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeSdkServer).ActionCall(m, &nodeSdkActionCallServer{stream})
}

type NodeSdk_ActionCallServer interface {
	Send(*ActionCallResponse) error
	grpc.ServerStream
}

type nodeSdkActionCallServer struct {
	grpc.ServerStream
}

func (x *nodeSdkActionCallServer) Send(m *ActionCallResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeSdk_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeSdkServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.NodeSdk/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeSdkServer).Unsubscribe(ctx, req.(*UnsubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeSdk_GetTopics_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetTopicsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeSdkServer).GetTopics(m, &nodeSdkGetTopicsServer{stream})
}

type NodeSdk_GetTopicsServer interface {
	Send(*GetTopicsResponse) error
	grpc.ServerStream
}

type nodeSdkGetTopicsServer struct {
	grpc.ServerStream
}

func (x *nodeSdkGetTopicsServer) Send(m *GetTopicsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeSdk_GetSubscrbedTopics_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetSubscrbedTopicsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeSdkServer).GetSubscrbedTopics(m, &nodeSdkGetSubscrbedTopicsServer{stream})
}

type NodeSdk_GetSubscrbedTopicsServer interface {
	Send(*GetSubscrbedTopicsResponse) error
	grpc.ServerStream
}

type nodeSdkGetSubscrbedTopicsServer struct {
	grpc.ServerStream
}

func (x *nodeSdkGetSubscrbedTopicsServer) Send(m *GetSubscrbedTopicsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _NodeSdk_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.rcc.NodeSdk",
	HandlerType: (*NodeSdkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServiceCall",
			Handler:    _NodeSdk_ServiceCall_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _NodeSdk_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _NodeSdk_Unsubscribe_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ActionCall",
			Handler:       _NodeSdk_ActionCall_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTopics",
			Handler:       _NodeSdk_GetTopics_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSubscrbedTopics",
			Handler:       _NodeSdk_GetSubscrbedTopics_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/node_sdk/v1/node_sdk.proto",
}
