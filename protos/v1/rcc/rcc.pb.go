// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.6.1
// source: protos/rcc/v1/rcc.proto

package rcc

import (
	context "context"
	model "github.com/TeamDotworld/robotix-proto/protos/v1/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{0}
}

func (x *AuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{1}
}

func (x *AuthResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AuthResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetAgentConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentConfigurationRequest) Reset() {
	*x = GetAgentConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentConfigurationRequest) ProtoMessage() {}

func (x *GetAgentConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetAgentConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{2}
}

type GetAgentConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *model.AgentConfigurationStore `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *GetAgentConfigurationResponse) Reset() {
	*x = GetAgentConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentConfigurationResponse) ProtoMessage() {}

func (x *GetAgentConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetAgentConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{3}
}

func (x *GetAgentConfigurationResponse) GetConfiguration() *model.AgentConfigurationStore {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{4}
}

func (x *HealthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{5}
}

func (x *HealthResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type SendCommandResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SendCommandResponseRequest) Reset() {
	*x = SendCommandResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponseRequest) ProtoMessage() {}

func (x *SendCommandResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponseRequest.ProtoReflect.Descriptor instead.
func (*SendCommandResponseRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{6}
}

func (x *SendCommandResponseRequest) GetResponse() *model.CommandResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{7}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SendCommandResponseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SendCommandResponseResponse) Reset() {
	*x = SendCommandResponseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponseResponse) ProtoMessage() {}

func (x *SendCommandResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponseResponse.ProtoReflect.Descriptor instead.
func (*SendCommandResponseResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{8}
}

func (x *SendCommandResponseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SendCommandResponseResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetCommandRequestStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCommandRequestStreamRequest) Reset() {
	*x = GetCommandRequestStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommandRequestStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandRequestStreamRequest) ProtoMessage() {}

func (x *GetCommandRequestStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandRequestStreamRequest.ProtoReflect.Descriptor instead.
func (*GetCommandRequestStreamRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{9}
}

type GetCommandRequestStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetCommandRequestStreamResponse) Reset() {
	*x = GetCommandRequestStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommandRequestStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandRequestStreamResponse) ProtoMessage() {}

func (x *GetCommandRequestStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandRequestStreamResponse.ProtoReflect.Descriptor instead.
func (*GetCommandRequestStreamResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{10}
}

func (x *GetCommandRequestStreamResponse) GetRequest() *model.CommandRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type PostDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PostDataResponse) Reset() {
	*x = PostDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDataResponse) ProtoMessage() {}

func (x *PostDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDataResponse.ProtoReflect.Descriptor instead.
func (*PostDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{11}
}

func (x *PostDataResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PostMultiDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*model.Datapoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PostMultiDataRequest) Reset() {
	*x = PostMultiDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMultiDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMultiDataRequest) ProtoMessage() {}

func (x *PostMultiDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMultiDataRequest.ProtoReflect.Descriptor instead.
func (*PostMultiDataRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{12}
}

func (x *PostMultiDataRequest) GetData() []*model.Datapoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostMultiDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PostMultiDataResponse) Reset() {
	*x = PostMultiDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMultiDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMultiDataResponse) ProtoMessage() {}

func (x *PostMultiDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMultiDataResponse.ProtoReflect.Descriptor instead.
func (*PostMultiDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{13}
}

func (x *PostMultiDataResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type StreamDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamDataResponse) Reset() {
	*x = StreamDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataResponse) ProtoMessage() {}

func (x *StreamDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataResponse.ProtoReflect.Descriptor instead.
func (*StreamDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{14}
}

type GetSubscriptionRequestStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error     string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Data:
	//	*GetSubscriptionRequestStreamResponse_Topics
	Data isGetSubscriptionRequestStreamResponse_Data `protobuf_oneof:"data"`
}

func (x *GetSubscriptionRequestStreamResponse) Reset() {
	*x = GetSubscriptionRequestStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionRequestStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequestStreamResponse) ProtoMessage() {}

func (x *GetSubscriptionRequestStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequestStreamResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequestStreamResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{15}
}

func (x *GetSubscriptionRequestStreamResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GetSubscriptionRequestStreamResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *GetSubscriptionRequestStreamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (m *GetSubscriptionRequestStreamResponse) GetData() isGetSubscriptionRequestStreamResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GetSubscriptionRequestStreamResponse) GetTopics() *model.Topics {
	if x, ok := x.GetData().(*GetSubscriptionRequestStreamResponse_Topics); ok {
		return x.Topics
	}
	return nil
}

type isGetSubscriptionRequestStreamResponse_Data interface {
	isGetSubscriptionRequestStreamResponse_Data()
}

type GetSubscriptionRequestStreamResponse_Topics struct {
	Topics *model.Topics `protobuf:"bytes,4,opt,name=topics,proto3,oneof"`
}

func (*GetSubscriptionRequestStreamResponse_Topics) isGetSubscriptionRequestStreamResponse_Data() {}

type GetSubscriptionRequestStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic  *model.StreamConfiguration `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Action string                     `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GetSubscriptionRequestStreamRequest) Reset() {
	*x = GetSubscriptionRequestStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionRequestStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequestStreamRequest) ProtoMessage() {}

func (x *GetSubscriptionRequestStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequestStreamRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequestStreamRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{16}
}

func (x *GetSubscriptionRequestStreamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSubscriptionRequestStreamRequest) GetTopic() *model.StreamConfiguration {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *GetSubscriptionRequestStreamRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type RecieveRosMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ControlDatapoint *model.ControlDatapoint `protobuf:"bytes,2,opt,name=control_datapoint,json=controlDatapoint,proto3" json:"control_datapoint,omitempty"`
}

func (x *RecieveRosMessagesRequest) Reset() {
	*x = RecieveRosMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecieveRosMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecieveRosMessagesRequest) ProtoMessage() {}

func (x *RecieveRosMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecieveRosMessagesRequest.ProtoReflect.Descriptor instead.
func (*RecieveRosMessagesRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{17}
}

func (x *RecieveRosMessagesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecieveRosMessagesRequest) GetControlDatapoint() *model.ControlDatapoint {
	if x != nil {
		return x.ControlDatapoint
	}
	return nil
}

type RecieveRosMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error     string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RecieveRosMessagesResponse) Reset() {
	*x = RecieveRosMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecieveRosMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecieveRosMessagesResponse) ProtoMessage() {}

func (x *RecieveRosMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecieveRosMessagesResponse.ProtoReflect.Descriptor instead.
func (*RecieveRosMessagesResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{18}
}

func (x *RecieveRosMessagesResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RecieveRosMessagesResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RecieveRosMessagesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Webrtc
type GetRtcSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer string `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *GetRtcSignalRequest) Reset() {
	*x = GetRtcSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRtcSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRtcSignalRequest) ProtoMessage() {}

func (x *GetRtcSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRtcSignalRequest.ProtoReflect.Descriptor instead.
func (*GetRtcSignalRequest) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{19}
}

func (x *GetRtcSignalRequest) GetOffer() string {
	if x != nil {
		return x.Offer
	}
	return ""
}

type GetRtcSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer string `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Error  string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetRtcSignalResponse) Reset() {
	*x = GetRtcSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_rcc_v1_rcc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRtcSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRtcSignalResponse) ProtoMessage() {}

func (x *GetRtcSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_rcc_v1_rcc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRtcSignalResponse.ProtoReflect.Descriptor instead.
func (*GetRtcSignalResponse) Descriptor() ([]byte, []int) {
	return file_protos_rcc_v1_rcc_proto_rawDescGZIP(), []int{20}
}

func (x *GetRtcSignalResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

func (x *GetRtcSignalResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_protos_rcc_v1_rcc_proto protoreflect.FileDescriptor

var file_protos_rcc_v1_rcc_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x72, 0x63, 0x63, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x63, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x76, 0x31, 0x2e, 0x72, 0x63,
	0x63, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0b, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x43, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x1f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x2f, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x53, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5a, 0x0a,
	0x1b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3f,
	0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2f, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x06,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x82, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x1a, 0x52,
	0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x74, 0x63,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x74, 0x63, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xb3, 0x08, 0x0a, 0x05, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63,
	0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x6e, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x7f, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2c, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x2b, 0x2e, 0x76, 0x31, 0x2e,
	0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x60, 0x0a,
	0x13, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63,
	0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x22, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x18, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x72,
	0x63, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31,
	0x2e, 0x72, 0x63, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x61, 0x0a, 0x12, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x65,
	0x76, 0x65, 0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x52,
	0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4f,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x74, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x74, 0x63, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1b, 0x2e, 0x76,
	0x31, 0x2e, 0x72, 0x63, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x74, 0x63, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65,
	0x61, 0x6d, 0x44, 0x6f, 0x74, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x69, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x63, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_rcc_v1_rcc_proto_rawDescOnce sync.Once
	file_protos_rcc_v1_rcc_proto_rawDescData = file_protos_rcc_v1_rcc_proto_rawDesc
)

func file_protos_rcc_v1_rcc_proto_rawDescGZIP() []byte {
	file_protos_rcc_v1_rcc_proto_rawDescOnce.Do(func() {
		file_protos_rcc_v1_rcc_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_rcc_v1_rcc_proto_rawDescData)
	})
	return file_protos_rcc_v1_rcc_proto_rawDescData
}

var file_protos_rcc_v1_rcc_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_protos_rcc_v1_rcc_proto_goTypes = []interface{}{
	(*AuthRequest)(nil),                          // 0: v1.rcc.AuthRequest
	(*AuthResponse)(nil),                         // 1: v1.rcc.AuthResponse
	(*GetAgentConfigurationRequest)(nil),         // 2: v1.rcc.GetAgentConfigurationRequest
	(*GetAgentConfigurationResponse)(nil),        // 3: v1.rcc.GetAgentConfigurationResponse
	(*HealthRequest)(nil),                        // 4: v1.rcc.HealthRequest
	(*HealthResponse)(nil),                       // 5: v1.rcc.HealthResponse
	(*SendCommandResponseRequest)(nil),           // 6: v1.rcc.SendCommandResponseRequest
	(*Error)(nil),                                // 7: v1.rcc.Error
	(*SendCommandResponseResponse)(nil),          // 8: v1.rcc.SendCommandResponseResponse
	(*GetCommandRequestStreamRequest)(nil),       // 9: v1.rcc.GetCommandRequestStreamRequest
	(*GetCommandRequestStreamResponse)(nil),      // 10: v1.rcc.GetCommandRequestStreamResponse
	(*PostDataResponse)(nil),                     // 11: v1.rcc.PostDataResponse
	(*PostMultiDataRequest)(nil),                 // 12: v1.rcc.PostMultiDataRequest
	(*PostMultiDataResponse)(nil),                // 13: v1.rcc.PostMultiDataResponse
	(*StreamDataResponse)(nil),                   // 14: v1.rcc.StreamDataResponse
	(*GetSubscriptionRequestStreamResponse)(nil), // 15: v1.rcc.GetSubscriptionRequestStreamResponse
	(*GetSubscriptionRequestStreamRequest)(nil),  // 16: v1.rcc.GetSubscriptionRequestStreamRequest
	(*RecieveRosMessagesRequest)(nil),            // 17: v1.rcc.RecieveRosMessagesRequest
	(*RecieveRosMessagesResponse)(nil),           // 18: v1.rcc.RecieveRosMessagesResponse
	(*GetRtcSignalRequest)(nil),                  // 19: v1.rcc.GetRtcSignalRequest
	(*GetRtcSignalResponse)(nil),                 // 20: v1.rcc.GetRtcSignalResponse
	(*model.AgentConfigurationStore)(nil),        // 21: v1.model.AgentConfigurationStore
	(*model.CommandResponse)(nil),                // 22: v1.model.CommandResponse
	(*model.CommandRequest)(nil),                 // 23: v1.model.CommandRequest
	(*model.Datapoint)(nil),                      // 24: v1.model.Datapoint
	(*model.Topics)(nil),                         // 25: v1.model.Topics
	(*model.StreamConfiguration)(nil),            // 26: v1.model.StreamConfiguration
	(*model.ControlDatapoint)(nil),               // 27: v1.model.ControlDatapoint
}
var file_protos_rcc_v1_rcc_proto_depIdxs = []int32{
	21, // 0: v1.rcc.GetAgentConfigurationResponse.configuration:type_name -> v1.model.AgentConfigurationStore
	22, // 1: v1.rcc.SendCommandResponseRequest.response:type_name -> v1.model.CommandResponse
	7,  // 2: v1.rcc.SendCommandResponseResponse.error:type_name -> v1.rcc.Error
	23, // 3: v1.rcc.GetCommandRequestStreamResponse.request:type_name -> v1.model.CommandRequest
	24, // 4: v1.rcc.PostMultiDataRequest.data:type_name -> v1.model.Datapoint
	25, // 5: v1.rcc.GetSubscriptionRequestStreamResponse.topics:type_name -> v1.model.Topics
	26, // 6: v1.rcc.GetSubscriptionRequestStreamRequest.topic:type_name -> v1.model.StreamConfiguration
	27, // 7: v1.rcc.RecieveRosMessagesRequest.control_datapoint:type_name -> v1.model.ControlDatapoint
	0,  // 8: v1.rcc.Agent.AuthenticateAgent:input_type -> v1.rcc.AuthRequest
	2,  // 9: v1.rcc.Agent.GetAgentConfiguration:input_type -> v1.rcc.GetAgentConfigurationRequest
	5,  // 10: v1.rcc.Agent.Health:input_type -> v1.rcc.HealthResponse
	9,  // 11: v1.rcc.Agent.GetCommandRequestStream:input_type -> v1.rcc.GetCommandRequestStreamRequest
	15, // 12: v1.rcc.Agent.GetSubscriptionRequestStream:input_type -> v1.rcc.GetSubscriptionRequestStreamResponse
	6,  // 13: v1.rcc.Agent.SendCommandResponse:input_type -> v1.rcc.SendCommandResponseRequest
	6,  // 14: v1.rcc.Agent.SendCommandResponseStream:input_type -> v1.rcc.SendCommandResponseRequest
	24, // 15: v1.rcc.Agent.PostData:input_type -> v1.model.Datapoint
	12, // 16: v1.rcc.Agent.PostMultiData:input_type -> v1.rcc.PostMultiDataRequest
	24, // 17: v1.rcc.Agent.StreamData:input_type -> v1.model.Datapoint
	18, // 18: v1.rcc.Agent.ReceiveRosMessages:input_type -> v1.rcc.RecieveRosMessagesResponse
	20, // 19: v1.rcc.Agent.GetRtcSignal:input_type -> v1.rcc.GetRtcSignalResponse
	1,  // 20: v1.rcc.Agent.AuthenticateAgent:output_type -> v1.rcc.AuthResponse
	3,  // 21: v1.rcc.Agent.GetAgentConfiguration:output_type -> v1.rcc.GetAgentConfigurationResponse
	4,  // 22: v1.rcc.Agent.Health:output_type -> v1.rcc.HealthRequest
	10, // 23: v1.rcc.Agent.GetCommandRequestStream:output_type -> v1.rcc.GetCommandRequestStreamResponse
	16, // 24: v1.rcc.Agent.GetSubscriptionRequestStream:output_type -> v1.rcc.GetSubscriptionRequestStreamRequest
	8,  // 25: v1.rcc.Agent.SendCommandResponse:output_type -> v1.rcc.SendCommandResponseResponse
	8,  // 26: v1.rcc.Agent.SendCommandResponseStream:output_type -> v1.rcc.SendCommandResponseResponse
	11, // 27: v1.rcc.Agent.PostData:output_type -> v1.rcc.PostDataResponse
	13, // 28: v1.rcc.Agent.PostMultiData:output_type -> v1.rcc.PostMultiDataResponse
	14, // 29: v1.rcc.Agent.StreamData:output_type -> v1.rcc.StreamDataResponse
	17, // 30: v1.rcc.Agent.ReceiveRosMessages:output_type -> v1.rcc.RecieveRosMessagesRequest
	19, // 31: v1.rcc.Agent.GetRtcSignal:output_type -> v1.rcc.GetRtcSignalRequest
	20, // [20:32] is the sub-list for method output_type
	8,  // [8:20] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_protos_rcc_v1_rcc_proto_init() }
func file_protos_rcc_v1_rcc_proto_init() {
	if File_protos_rcc_v1_rcc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_rcc_v1_rcc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommandResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommandResponseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommandRequestStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommandRequestStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMultiDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMultiDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionRequestStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionRequestStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecieveRosMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecieveRosMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRtcSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_rcc_v1_rcc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRtcSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_rcc_v1_rcc_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*GetSubscriptionRequestStreamResponse_Topics)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_rcc_v1_rcc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_rcc_v1_rcc_proto_goTypes,
		DependencyIndexes: file_protos_rcc_v1_rcc_proto_depIdxs,
		MessageInfos:      file_protos_rcc_v1_rcc_proto_msgTypes,
	}.Build()
	File_protos_rcc_v1_rcc_proto = out.File
	file_protos_rcc_v1_rcc_proto_rawDesc = nil
	file_protos_rcc_v1_rcc_proto_goTypes = nil
	file_protos_rcc_v1_rcc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	AuthenticateAgent(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	// GetAgentConfiguration returns the Agent configuration.
	GetAgentConfiguration(ctx context.Context, in *GetAgentConfigurationRequest, opts ...grpc.CallOption) (*GetAgentConfigurationResponse, error)
	// Health can be used to check if the Agent is running and its gRPC API is
	// available.
	Health(ctx context.Context, opts ...grpc.CallOption) (Agent_HealthClient, error)
	GetCommandRequestStream(ctx context.Context, in *GetCommandRequestStreamRequest, opts ...grpc.CallOption) (Agent_GetCommandRequestStreamClient, error)
	GetSubscriptionRequestStream(ctx context.Context, opts ...grpc.CallOption) (Agent_GetSubscriptionRequestStreamClient, error)
	// SendCommandResponse sends a response to a command request.
	SendCommandResponse(ctx context.Context, in *SendCommandResponseRequest, opts ...grpc.CallOption) (*SendCommandResponseResponse, error)
	SendCommandResponseStream(ctx context.Context, opts ...grpc.CallOption) (Agent_SendCommandResponseStreamClient, error)
	PostData(ctx context.Context, in *model.Datapoint, opts ...grpc.CallOption) (*PostDataResponse, error)
	PostMultiData(ctx context.Context, in *PostMultiDataRequest, opts ...grpc.CallOption) (*PostMultiDataResponse, error)
	// StreamData accepts a stream of data points. See PostData for information on
	// expected error conditions and codes.
	StreamData(ctx context.Context, opts ...grpc.CallOption) (Agent_StreamDataClient, error)
	ReceiveRosMessages(ctx context.Context, opts ...grpc.CallOption) (Agent_ReceiveRosMessagesClient, error)
	// Get rtc signal from Rcc server to agent
	GetRtcSignal(ctx context.Context, opts ...grpc.CallOption) (Agent_GetRtcSignalClient, error)
}

type agentClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClient(cc grpc.ClientConnInterface) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) AuthenticateAgent(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/AuthenticateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) GetAgentConfiguration(ctx context.Context, in *GetAgentConfigurationRequest, opts ...grpc.CallOption) (*GetAgentConfigurationResponse, error) {
	out := new(GetAgentConfigurationResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/GetAgentConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Health(ctx context.Context, opts ...grpc.CallOption) (Agent_HealthClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/v1.rcc.Agent/Health", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentHealthClient{stream}
	return x, nil
}

type Agent_HealthClient interface {
	Send(*HealthResponse) error
	Recv() (*HealthRequest, error)
	grpc.ClientStream
}

type agentHealthClient struct {
	grpc.ClientStream
}

func (x *agentHealthClient) Send(m *HealthResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentHealthClient) Recv() (*HealthRequest, error) {
	m := new(HealthRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) GetCommandRequestStream(ctx context.Context, in *GetCommandRequestStreamRequest, opts ...grpc.CallOption) (Agent_GetCommandRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[1], "/v1.rcc.Agent/GetCommandRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentGetCommandRequestStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_GetCommandRequestStreamClient interface {
	Recv() (*GetCommandRequestStreamResponse, error)
	grpc.ClientStream
}

type agentGetCommandRequestStreamClient struct {
	grpc.ClientStream
}

func (x *agentGetCommandRequestStreamClient) Recv() (*GetCommandRequestStreamResponse, error) {
	m := new(GetCommandRequestStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) GetSubscriptionRequestStream(ctx context.Context, opts ...grpc.CallOption) (Agent_GetSubscriptionRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[2], "/v1.rcc.Agent/GetSubscriptionRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentGetSubscriptionRequestStreamClient{stream}
	return x, nil
}

type Agent_GetSubscriptionRequestStreamClient interface {
	Send(*GetSubscriptionRequestStreamResponse) error
	Recv() (*GetSubscriptionRequestStreamRequest, error)
	grpc.ClientStream
}

type agentGetSubscriptionRequestStreamClient struct {
	grpc.ClientStream
}

func (x *agentGetSubscriptionRequestStreamClient) Send(m *GetSubscriptionRequestStreamResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentGetSubscriptionRequestStreamClient) Recv() (*GetSubscriptionRequestStreamRequest, error) {
	m := new(GetSubscriptionRequestStreamRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) SendCommandResponse(ctx context.Context, in *SendCommandResponseRequest, opts ...grpc.CallOption) (*SendCommandResponseResponse, error) {
	out := new(SendCommandResponseResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/SendCommandResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) SendCommandResponseStream(ctx context.Context, opts ...grpc.CallOption) (Agent_SendCommandResponseStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[3], "/v1.rcc.Agent/SendCommandResponseStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentSendCommandResponseStreamClient{stream}
	return x, nil
}

type Agent_SendCommandResponseStreamClient interface {
	Send(*SendCommandResponseRequest) error
	Recv() (*SendCommandResponseResponse, error)
	grpc.ClientStream
}

type agentSendCommandResponseStreamClient struct {
	grpc.ClientStream
}

func (x *agentSendCommandResponseStreamClient) Send(m *SendCommandResponseRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentSendCommandResponseStreamClient) Recv() (*SendCommandResponseResponse, error) {
	m := new(SendCommandResponseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) PostData(ctx context.Context, in *model.Datapoint, opts ...grpc.CallOption) (*PostDataResponse, error) {
	out := new(PostDataResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/PostData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) PostMultiData(ctx context.Context, in *PostMultiDataRequest, opts ...grpc.CallOption) (*PostMultiDataResponse, error) {
	out := new(PostMultiDataResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/PostMultiData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) StreamData(ctx context.Context, opts ...grpc.CallOption) (Agent_StreamDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[4], "/v1.rcc.Agent/StreamData", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentStreamDataClient{stream}
	return x, nil
}

type Agent_StreamDataClient interface {
	Send(*model.Datapoint) error
	CloseAndRecv() (*StreamDataResponse, error)
	grpc.ClientStream
}

type agentStreamDataClient struct {
	grpc.ClientStream
}

func (x *agentStreamDataClient) Send(m *model.Datapoint) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentStreamDataClient) CloseAndRecv() (*StreamDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StreamDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) ReceiveRosMessages(ctx context.Context, opts ...grpc.CallOption) (Agent_ReceiveRosMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[5], "/v1.rcc.Agent/ReceiveRosMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentReceiveRosMessagesClient{stream}
	return x, nil
}

type Agent_ReceiveRosMessagesClient interface {
	Send(*RecieveRosMessagesResponse) error
	Recv() (*RecieveRosMessagesRequest, error)
	grpc.ClientStream
}

type agentReceiveRosMessagesClient struct {
	grpc.ClientStream
}

func (x *agentReceiveRosMessagesClient) Send(m *RecieveRosMessagesResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentReceiveRosMessagesClient) Recv() (*RecieveRosMessagesRequest, error) {
	m := new(RecieveRosMessagesRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) GetRtcSignal(ctx context.Context, opts ...grpc.CallOption) (Agent_GetRtcSignalClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[6], "/v1.rcc.Agent/GetRtcSignal", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentGetRtcSignalClient{stream}
	return x, nil
}

type Agent_GetRtcSignalClient interface {
	Send(*GetRtcSignalResponse) error
	Recv() (*GetRtcSignalRequest, error)
	grpc.ClientStream
}

type agentGetRtcSignalClient struct {
	grpc.ClientStream
}

func (x *agentGetRtcSignalClient) Send(m *GetRtcSignalResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentGetRtcSignalClient) Recv() (*GetRtcSignalRequest, error) {
	m := new(GetRtcSignalRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	AuthenticateAgent(context.Context, *AuthRequest) (*AuthResponse, error)
	// GetAgentConfiguration returns the Agent configuration.
	GetAgentConfiguration(context.Context, *GetAgentConfigurationRequest) (*GetAgentConfigurationResponse, error)
	// Health can be used to check if the Agent is running and its gRPC API is
	// available.
	Health(Agent_HealthServer) error
	GetCommandRequestStream(*GetCommandRequestStreamRequest, Agent_GetCommandRequestStreamServer) error
	GetSubscriptionRequestStream(Agent_GetSubscriptionRequestStreamServer) error
	// SendCommandResponse sends a response to a command request.
	SendCommandResponse(context.Context, *SendCommandResponseRequest) (*SendCommandResponseResponse, error)
	SendCommandResponseStream(Agent_SendCommandResponseStreamServer) error
	PostData(context.Context, *model.Datapoint) (*PostDataResponse, error)
	PostMultiData(context.Context, *PostMultiDataRequest) (*PostMultiDataResponse, error)
	// StreamData accepts a stream of data points. See PostData for information on
	// expected error conditions and codes.
	StreamData(Agent_StreamDataServer) error
	ReceiveRosMessages(Agent_ReceiveRosMessagesServer) error
	// Get rtc signal from Rcc server to agent
	GetRtcSignal(Agent_GetRtcSignalServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) AuthenticateAgent(context.Context, *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthenticateAgent not implemented")
}
func (*UnimplementedAgentServer) GetAgentConfiguration(context.Context, *GetAgentConfigurationRequest) (*GetAgentConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgentConfiguration not implemented")
}
func (*UnimplementedAgentServer) Health(Agent_HealthServer) error {
	return status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedAgentServer) GetCommandRequestStream(*GetCommandRequestStreamRequest, Agent_GetCommandRequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCommandRequestStream not implemented")
}
func (*UnimplementedAgentServer) GetSubscriptionRequestStream(Agent_GetSubscriptionRequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSubscriptionRequestStream not implemented")
}
func (*UnimplementedAgentServer) SendCommandResponse(context.Context, *SendCommandResponseRequest) (*SendCommandResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCommandResponse not implemented")
}
func (*UnimplementedAgentServer) SendCommandResponseStream(Agent_SendCommandResponseStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SendCommandResponseStream not implemented")
}
func (*UnimplementedAgentServer) PostData(context.Context, *model.Datapoint) (*PostDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostData not implemented")
}
func (*UnimplementedAgentServer) PostMultiData(context.Context, *PostMultiDataRequest) (*PostMultiDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMultiData not implemented")
}
func (*UnimplementedAgentServer) StreamData(Agent_StreamDataServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamData not implemented")
}
func (*UnimplementedAgentServer) ReceiveRosMessages(Agent_ReceiveRosMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveRosMessages not implemented")
}
func (*UnimplementedAgentServer) GetRtcSignal(Agent_GetRtcSignalServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRtcSignal not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_AuthenticateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).AuthenticateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/AuthenticateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).AuthenticateAgent(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_GetAgentConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetAgentConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/GetAgentConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetAgentConfiguration(ctx, req.(*GetAgentConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Health_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).Health(&agentHealthServer{stream})
}

type Agent_HealthServer interface {
	Send(*HealthRequest) error
	Recv() (*HealthResponse, error)
	grpc.ServerStream
}

type agentHealthServer struct {
	grpc.ServerStream
}

func (x *agentHealthServer) Send(m *HealthRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentHealthServer) Recv() (*HealthResponse, error) {
	m := new(HealthResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_GetCommandRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCommandRequestStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).GetCommandRequestStream(m, &agentGetCommandRequestStreamServer{stream})
}

type Agent_GetCommandRequestStreamServer interface {
	Send(*GetCommandRequestStreamResponse) error
	grpc.ServerStream
}

type agentGetCommandRequestStreamServer struct {
	grpc.ServerStream
}

func (x *agentGetCommandRequestStreamServer) Send(m *GetCommandRequestStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Agent_GetSubscriptionRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).GetSubscriptionRequestStream(&agentGetSubscriptionRequestStreamServer{stream})
}

type Agent_GetSubscriptionRequestStreamServer interface {
	Send(*GetSubscriptionRequestStreamRequest) error
	Recv() (*GetSubscriptionRequestStreamResponse, error)
	grpc.ServerStream
}

type agentGetSubscriptionRequestStreamServer struct {
	grpc.ServerStream
}

func (x *agentGetSubscriptionRequestStreamServer) Send(m *GetSubscriptionRequestStreamRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentGetSubscriptionRequestStreamServer) Recv() (*GetSubscriptionRequestStreamResponse, error) {
	m := new(GetSubscriptionRequestStreamResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_SendCommandResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCommandResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).SendCommandResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/SendCommandResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).SendCommandResponse(ctx, req.(*SendCommandResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_SendCommandResponseStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).SendCommandResponseStream(&agentSendCommandResponseStreamServer{stream})
}

type Agent_SendCommandResponseStreamServer interface {
	Send(*SendCommandResponseResponse) error
	Recv() (*SendCommandResponseRequest, error)
	grpc.ServerStream
}

type agentSendCommandResponseStreamServer struct {
	grpc.ServerStream
}

func (x *agentSendCommandResponseStreamServer) Send(m *SendCommandResponseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentSendCommandResponseStreamServer) Recv() (*SendCommandResponseRequest, error) {
	m := new(SendCommandResponseRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_PostData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.Datapoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).PostData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/PostData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).PostData(ctx, req.(*model.Datapoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_PostMultiData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMultiDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).PostMultiData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/PostMultiData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).PostMultiData(ctx, req.(*PostMultiDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_StreamData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).StreamData(&agentStreamDataServer{stream})
}

type Agent_StreamDataServer interface {
	SendAndClose(*StreamDataResponse) error
	Recv() (*model.Datapoint, error)
	grpc.ServerStream
}

type agentStreamDataServer struct {
	grpc.ServerStream
}

func (x *agentStreamDataServer) SendAndClose(m *StreamDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentStreamDataServer) Recv() (*model.Datapoint, error) {
	m := new(model.Datapoint)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_ReceiveRosMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).ReceiveRosMessages(&agentReceiveRosMessagesServer{stream})
}

type Agent_ReceiveRosMessagesServer interface {
	Send(*RecieveRosMessagesRequest) error
	Recv() (*RecieveRosMessagesResponse, error)
	grpc.ServerStream
}

type agentReceiveRosMessagesServer struct {
	grpc.ServerStream
}

func (x *agentReceiveRosMessagesServer) Send(m *RecieveRosMessagesRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentReceiveRosMessagesServer) Recv() (*RecieveRosMessagesResponse, error) {
	m := new(RecieveRosMessagesResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_GetRtcSignal_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).GetRtcSignal(&agentGetRtcSignalServer{stream})
}

type Agent_GetRtcSignalServer interface {
	Send(*GetRtcSignalRequest) error
	Recv() (*GetRtcSignalResponse, error)
	grpc.ServerStream
}

type agentGetRtcSignalServer struct {
	grpc.ServerStream
}

func (x *agentGetRtcSignalServer) Send(m *GetRtcSignalRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentGetRtcSignalServer) Recv() (*GetRtcSignalResponse, error) {
	m := new(GetRtcSignalResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.rcc.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthenticateAgent",
			Handler:    _Agent_AuthenticateAgent_Handler,
		},
		{
			MethodName: "GetAgentConfiguration",
			Handler:    _Agent_GetAgentConfiguration_Handler,
		},
		{
			MethodName: "SendCommandResponse",
			Handler:    _Agent_SendCommandResponse_Handler,
		},
		{
			MethodName: "PostData",
			Handler:    _Agent_PostData_Handler,
		},
		{
			MethodName: "PostMultiData",
			Handler:    _Agent_PostMultiData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Health",
			Handler:       _Agent_Health_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetCommandRequestStream",
			Handler:       _Agent_GetCommandRequestStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSubscriptionRequestStream",
			Handler:       _Agent_GetSubscriptionRequestStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SendCommandResponseStream",
			Handler:       _Agent_SendCommandResponseStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamData",
			Handler:       _Agent_StreamData_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceiveRosMessages",
			Handler:       _Agent_ReceiveRosMessages_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetRtcSignal",
			Handler:       _Agent_GetRtcSignal_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/rcc/v1/rcc.proto",
}
