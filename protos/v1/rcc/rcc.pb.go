// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/rcc/v1/rcc.proto

package rcc

import (
	context "context"
	fmt "fmt"
	model "github.com/TeamDotworld/robotix-proto/protos/v1/model"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AuthRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{1}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *AuthResponse) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type GetAgentConfigurationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentConfigurationRequest) Reset()         { *m = GetAgentConfigurationRequest{} }
func (m *GetAgentConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*GetAgentConfigurationRequest) ProtoMessage()    {}
func (*GetAgentConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{2}
}

func (m *GetAgentConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentConfigurationRequest.Unmarshal(m, b)
}
func (m *GetAgentConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *GetAgentConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentConfigurationRequest.Merge(m, src)
}
func (m *GetAgentConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_GetAgentConfigurationRequest.Size(m)
}
func (m *GetAgentConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentConfigurationRequest proto.InternalMessageInfo

type GetAgentConfigurationResponse struct {
	Configuration        *model.AgentConfigurationStore `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *GetAgentConfigurationResponse) Reset()         { *m = GetAgentConfigurationResponse{} }
func (m *GetAgentConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*GetAgentConfigurationResponse) ProtoMessage()    {}
func (*GetAgentConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{3}
}

func (m *GetAgentConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentConfigurationResponse.Unmarshal(m, b)
}
func (m *GetAgentConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *GetAgentConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentConfigurationResponse.Merge(m, src)
}
func (m *GetAgentConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_GetAgentConfigurationResponse.Size(m)
}
func (m *GetAgentConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentConfigurationResponse proto.InternalMessageInfo

func (m *GetAgentConfigurationResponse) GetConfiguration() *model.AgentConfigurationStore {
	if m != nil {
		return m.Configuration
	}
	return nil
}

type HealthRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthRequest) Reset()         { *m = HealthRequest{} }
func (m *HealthRequest) String() string { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()    {}
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{4}
}

func (m *HealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthRequest.Unmarshal(m, b)
}
func (m *HealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthRequest.Marshal(b, m, deterministic)
}
func (m *HealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthRequest.Merge(m, src)
}
func (m *HealthRequest) XXX_Size() int {
	return xxx_messageInfo_HealthRequest.Size(m)
}
func (m *HealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthRequest proto.InternalMessageInfo

func (m *HealthRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type HealthResponse struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{5}
}

func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type SendCommandResponseRequest struct {
	Response             *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SendCommandResponseRequest) Reset()         { *m = SendCommandResponseRequest{} }
func (m *SendCommandResponseRequest) String() string { return proto.CompactTextString(m) }
func (*SendCommandResponseRequest) ProtoMessage()    {}
func (*SendCommandResponseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{6}
}

func (m *SendCommandResponseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCommandResponseRequest.Unmarshal(m, b)
}
func (m *SendCommandResponseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCommandResponseRequest.Marshal(b, m, deterministic)
}
func (m *SendCommandResponseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCommandResponseRequest.Merge(m, src)
}
func (m *SendCommandResponseRequest) XXX_Size() int {
	return xxx_messageInfo_SendCommandResponseRequest.Size(m)
}
func (m *SendCommandResponseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCommandResponseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendCommandResponseRequest proto.InternalMessageInfo

func (m *SendCommandResponseRequest) GetResponse() *model.CommandResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{7}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type SendCommandResponseResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendCommandResponseResponse) Reset()         { *m = SendCommandResponseResponse{} }
func (m *SendCommandResponseResponse) String() string { return proto.CompactTextString(m) }
func (*SendCommandResponseResponse) ProtoMessage()    {}
func (*SendCommandResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{8}
}

func (m *SendCommandResponseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendCommandResponseResponse.Unmarshal(m, b)
}
func (m *SendCommandResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendCommandResponseResponse.Marshal(b, m, deterministic)
}
func (m *SendCommandResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendCommandResponseResponse.Merge(m, src)
}
func (m *SendCommandResponseResponse) XXX_Size() int {
	return xxx_messageInfo_SendCommandResponseResponse.Size(m)
}
func (m *SendCommandResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendCommandResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendCommandResponseResponse proto.InternalMessageInfo

func (m *SendCommandResponseResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *SendCommandResponseResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetCommandRequestStreamRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommandRequestStreamRequest) Reset()         { *m = GetCommandRequestStreamRequest{} }
func (m *GetCommandRequestStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommandRequestStreamRequest) ProtoMessage()    {}
func (*GetCommandRequestStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{9}
}

func (m *GetCommandRequestStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommandRequestStreamRequest.Unmarshal(m, b)
}
func (m *GetCommandRequestStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommandRequestStreamRequest.Marshal(b, m, deterministic)
}
func (m *GetCommandRequestStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommandRequestStreamRequest.Merge(m, src)
}
func (m *GetCommandRequestStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommandRequestStreamRequest.Size(m)
}
func (m *GetCommandRequestStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommandRequestStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommandRequestStreamRequest proto.InternalMessageInfo

type GetCommandRequestStreamResponse struct {
	Request              *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetCommandRequestStreamResponse) Reset()         { *m = GetCommandRequestStreamResponse{} }
func (m *GetCommandRequestStreamResponse) String() string { return proto.CompactTextString(m) }
func (*GetCommandRequestStreamResponse) ProtoMessage()    {}
func (*GetCommandRequestStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{10}
}

func (m *GetCommandRequestStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommandRequestStreamResponse.Unmarshal(m, b)
}
func (m *GetCommandRequestStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommandRequestStreamResponse.Marshal(b, m, deterministic)
}
func (m *GetCommandRequestStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommandRequestStreamResponse.Merge(m, src)
}
func (m *GetCommandRequestStreamResponse) XXX_Size() int {
	return xxx_messageInfo_GetCommandRequestStreamResponse.Size(m)
}
func (m *GetCommandRequestStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommandRequestStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommandRequestStreamResponse proto.InternalMessageInfo

func (m *GetCommandRequestStreamResponse) GetRequest() *model.CommandRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type PostDataResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostDataResponse) Reset()         { *m = PostDataResponse{} }
func (m *PostDataResponse) String() string { return proto.CompactTextString(m) }
func (*PostDataResponse) ProtoMessage()    {}
func (*PostDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{11}
}

func (m *PostDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostDataResponse.Unmarshal(m, b)
}
func (m *PostDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostDataResponse.Marshal(b, m, deterministic)
}
func (m *PostDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostDataResponse.Merge(m, src)
}
func (m *PostDataResponse) XXX_Size() int {
	return xxx_messageInfo_PostDataResponse.Size(m)
}
func (m *PostDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostDataResponse proto.InternalMessageInfo

func (m *PostDataResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type PostMultiDataRequest struct {
	Data                 []*model.Datapoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PostMultiDataRequest) Reset()         { *m = PostMultiDataRequest{} }
func (m *PostMultiDataRequest) String() string { return proto.CompactTextString(m) }
func (*PostMultiDataRequest) ProtoMessage()    {}
func (*PostMultiDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{12}
}

func (m *PostMultiDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostMultiDataRequest.Unmarshal(m, b)
}
func (m *PostMultiDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostMultiDataRequest.Marshal(b, m, deterministic)
}
func (m *PostMultiDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostMultiDataRequest.Merge(m, src)
}
func (m *PostMultiDataRequest) XXX_Size() int {
	return xxx_messageInfo_PostMultiDataRequest.Size(m)
}
func (m *PostMultiDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostMultiDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostMultiDataRequest proto.InternalMessageInfo

func (m *PostMultiDataRequest) GetData() []*model.Datapoint {
	if m != nil {
		return m.Data
	}
	return nil
}

type PostMultiDataResponse struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostMultiDataResponse) Reset()         { *m = PostMultiDataResponse{} }
func (m *PostMultiDataResponse) String() string { return proto.CompactTextString(m) }
func (*PostMultiDataResponse) ProtoMessage()    {}
func (*PostMultiDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{13}
}

func (m *PostMultiDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostMultiDataResponse.Unmarshal(m, b)
}
func (m *PostMultiDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostMultiDataResponse.Marshal(b, m, deterministic)
}
func (m *PostMultiDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostMultiDataResponse.Merge(m, src)
}
func (m *PostMultiDataResponse) XXX_Size() int {
	return xxx_messageInfo_PostMultiDataResponse.Size(m)
}
func (m *PostMultiDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostMultiDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostMultiDataResponse proto.InternalMessageInfo

func (m *PostMultiDataResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type StreamDataResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamDataResponse) Reset()         { *m = StreamDataResponse{} }
func (m *StreamDataResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDataResponse) ProtoMessage()    {}
func (*StreamDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{14}
}

func (m *StreamDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDataResponse.Unmarshal(m, b)
}
func (m *StreamDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDataResponse.Marshal(b, m, deterministic)
}
func (m *StreamDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDataResponse.Merge(m, src)
}
func (m *StreamDataResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDataResponse.Size(m)
}
func (m *StreamDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDataResponse proto.InternalMessageInfo

type GetSubscriptionRequestStreamResponse struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error     string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*GetSubscriptionRequestStreamResponse_Topics
	Data                 isGetSubscriptionRequestStreamResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *GetSubscriptionRequestStreamResponse) Reset()         { *m = GetSubscriptionRequestStreamResponse{} }
func (m *GetSubscriptionRequestStreamResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionRequestStreamResponse) ProtoMessage()    {}
func (*GetSubscriptionRequestStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{15}
}

func (m *GetSubscriptionRequestStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionRequestStreamResponse.Unmarshal(m, b)
}
func (m *GetSubscriptionRequestStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionRequestStreamResponse.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionRequestStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionRequestStreamResponse.Merge(m, src)
}
func (m *GetSubscriptionRequestStreamResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionRequestStreamResponse.Size(m)
}
func (m *GetSubscriptionRequestStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionRequestStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionRequestStreamResponse proto.InternalMessageInfo

func (m *GetSubscriptionRequestStreamResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *GetSubscriptionRequestStreamResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *GetSubscriptionRequestStreamResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type isGetSubscriptionRequestStreamResponse_Data interface {
	isGetSubscriptionRequestStreamResponse_Data()
}

type GetSubscriptionRequestStreamResponse_Topics struct {
	Topics *model.Topics `protobuf:"bytes,4,opt,name=topics,proto3,oneof"`
}

func (*GetSubscriptionRequestStreamResponse_Topics) isGetSubscriptionRequestStreamResponse_Data() {}

func (m *GetSubscriptionRequestStreamResponse) GetData() isGetSubscriptionRequestStreamResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetSubscriptionRequestStreamResponse) GetTopics() *model.Topics {
	if x, ok := m.GetData().(*GetSubscriptionRequestStreamResponse_Topics); ok {
		return x.Topics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetSubscriptionRequestStreamResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetSubscriptionRequestStreamResponse_Topics)(nil),
	}
}

type GetSubscriptionRequestStreamRequest struct {
	Id                   string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic                *model.StreamConfiguration `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Action               string                     `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetSubscriptionRequestStreamRequest) Reset()         { *m = GetSubscriptionRequestStreamRequest{} }
func (m *GetSubscriptionRequestStreamRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubscriptionRequestStreamRequest) ProtoMessage()    {}
func (*GetSubscriptionRequestStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{16}
}

func (m *GetSubscriptionRequestStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubscriptionRequestStreamRequest.Unmarshal(m, b)
}
func (m *GetSubscriptionRequestStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubscriptionRequestStreamRequest.Marshal(b, m, deterministic)
}
func (m *GetSubscriptionRequestStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubscriptionRequestStreamRequest.Merge(m, src)
}
func (m *GetSubscriptionRequestStreamRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubscriptionRequestStreamRequest.Size(m)
}
func (m *GetSubscriptionRequestStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubscriptionRequestStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubscriptionRequestStreamRequest proto.InternalMessageInfo

func (m *GetSubscriptionRequestStreamRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetSubscriptionRequestStreamRequest) GetTopic() *model.StreamConfiguration {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *GetSubscriptionRequestStreamRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

type RecieveRosMessagesRequest struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ControlDatapoint     *model.ControlDatapoint `protobuf:"bytes,2,opt,name=control_datapoint,json=controlDatapoint,proto3" json:"control_datapoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RecieveRosMessagesRequest) Reset()         { *m = RecieveRosMessagesRequest{} }
func (m *RecieveRosMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*RecieveRosMessagesRequest) ProtoMessage()    {}
func (*RecieveRosMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{17}
}

func (m *RecieveRosMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecieveRosMessagesRequest.Unmarshal(m, b)
}
func (m *RecieveRosMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecieveRosMessagesRequest.Marshal(b, m, deterministic)
}
func (m *RecieveRosMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecieveRosMessagesRequest.Merge(m, src)
}
func (m *RecieveRosMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_RecieveRosMessagesRequest.Size(m)
}
func (m *RecieveRosMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecieveRosMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecieveRosMessagesRequest proto.InternalMessageInfo

func (m *RecieveRosMessagesRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RecieveRosMessagesRequest) GetControlDatapoint() *model.ControlDatapoint {
	if m != nil {
		return m.ControlDatapoint
	}
	return nil
}

type RecieveRosMessagesResponse struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status               bool     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecieveRosMessagesResponse) Reset()         { *m = RecieveRosMessagesResponse{} }
func (m *RecieveRosMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*RecieveRosMessagesResponse) ProtoMessage()    {}
func (*RecieveRosMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{18}
}

func (m *RecieveRosMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecieveRosMessagesResponse.Unmarshal(m, b)
}
func (m *RecieveRosMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecieveRosMessagesResponse.Marshal(b, m, deterministic)
}
func (m *RecieveRosMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecieveRosMessagesResponse.Merge(m, src)
}
func (m *RecieveRosMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_RecieveRosMessagesResponse.Size(m)
}
func (m *RecieveRosMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecieveRosMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecieveRosMessagesResponse proto.InternalMessageInfo

func (m *RecieveRosMessagesResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *RecieveRosMessagesResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *RecieveRosMessagesResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// Webrtc
type GetRtcSignalRequest struct {
	Offer                string   `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRtcSignalRequest) Reset()         { *m = GetRtcSignalRequest{} }
func (m *GetRtcSignalRequest) String() string { return proto.CompactTextString(m) }
func (*GetRtcSignalRequest) ProtoMessage()    {}
func (*GetRtcSignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{19}
}

func (m *GetRtcSignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRtcSignalRequest.Unmarshal(m, b)
}
func (m *GetRtcSignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRtcSignalRequest.Marshal(b, m, deterministic)
}
func (m *GetRtcSignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRtcSignalRequest.Merge(m, src)
}
func (m *GetRtcSignalRequest) XXX_Size() int {
	return xxx_messageInfo_GetRtcSignalRequest.Size(m)
}
func (m *GetRtcSignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRtcSignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRtcSignalRequest proto.InternalMessageInfo

func (m *GetRtcSignalRequest) GetOffer() string {
	if m != nil {
		return m.Offer
	}
	return ""
}

func (m *GetRtcSignalRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetRtcSignalResponse struct {
	Answer               string   `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRtcSignalResponse) Reset()         { *m = GetRtcSignalResponse{} }
func (m *GetRtcSignalResponse) String() string { return proto.CompactTextString(m) }
func (*GetRtcSignalResponse) ProtoMessage()    {}
func (*GetRtcSignalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2602823b54b00665, []int{20}
}

func (m *GetRtcSignalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRtcSignalResponse.Unmarshal(m, b)
}
func (m *GetRtcSignalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRtcSignalResponse.Marshal(b, m, deterministic)
}
func (m *GetRtcSignalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRtcSignalResponse.Merge(m, src)
}
func (m *GetRtcSignalResponse) XXX_Size() int {
	return xxx_messageInfo_GetRtcSignalResponse.Size(m)
}
func (m *GetRtcSignalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRtcSignalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRtcSignalResponse proto.InternalMessageInfo

func (m *GetRtcSignalResponse) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func (m *GetRtcSignalResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "v1.rcc.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "v1.rcc.AuthResponse")
	proto.RegisterType((*GetAgentConfigurationRequest)(nil), "v1.rcc.GetAgentConfigurationRequest")
	proto.RegisterType((*GetAgentConfigurationResponse)(nil), "v1.rcc.GetAgentConfigurationResponse")
	proto.RegisterType((*HealthRequest)(nil), "v1.rcc.HealthRequest")
	proto.RegisterType((*HealthResponse)(nil), "v1.rcc.HealthResponse")
	proto.RegisterType((*SendCommandResponseRequest)(nil), "v1.rcc.SendCommandResponseRequest")
	proto.RegisterType((*Error)(nil), "v1.rcc.Error")
	proto.RegisterType((*SendCommandResponseResponse)(nil), "v1.rcc.SendCommandResponseResponse")
	proto.RegisterType((*GetCommandRequestStreamRequest)(nil), "v1.rcc.GetCommandRequestStreamRequest")
	proto.RegisterType((*GetCommandRequestStreamResponse)(nil), "v1.rcc.GetCommandRequestStreamResponse")
	proto.RegisterType((*PostDataResponse)(nil), "v1.rcc.PostDataResponse")
	proto.RegisterType((*PostMultiDataRequest)(nil), "v1.rcc.PostMultiDataRequest")
	proto.RegisterType((*PostMultiDataResponse)(nil), "v1.rcc.PostMultiDataResponse")
	proto.RegisterType((*StreamDataResponse)(nil), "v1.rcc.StreamDataResponse")
	proto.RegisterType((*GetSubscriptionRequestStreamResponse)(nil), "v1.rcc.GetSubscriptionRequestStreamResponse")
	proto.RegisterType((*GetSubscriptionRequestStreamRequest)(nil), "v1.rcc.GetSubscriptionRequestStreamRequest")
	proto.RegisterType((*RecieveRosMessagesRequest)(nil), "v1.rcc.RecieveRosMessagesRequest")
	proto.RegisterType((*RecieveRosMessagesResponse)(nil), "v1.rcc.RecieveRosMessagesResponse")
	proto.RegisterType((*GetRtcSignalRequest)(nil), "v1.rcc.GetRtcSignalRequest")
	proto.RegisterType((*GetRtcSignalResponse)(nil), "v1.rcc.GetRtcSignalResponse")
}

func init() { proto.RegisterFile("protos/rcc/v1/rcc.proto", fileDescriptor_2602823b54b00665) }

var fileDescriptor_2602823b54b00665 = []byte{
	// 929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x72, 0xdb, 0x36,
	0x10, 0x16, 0x1d, 0x5b, 0x91, 0xd7, 0x71, 0xc6, 0x81, 0xe5, 0x44, 0x86, 0x7f, 0x03, 0xa7, 0x8d,
	0x27, 0x6d, 0xa5, 0x58, 0x1e, 0x9f, 0x3a, 0x9d, 0xd6, 0xb1, 0x3b, 0x4a, 0x0e, 0x69, 0x3b, 0x54,
	0x7a, 0xc9, 0xc5, 0xa5, 0x41, 0x58, 0x46, 0x2b, 0x11, 0x0a, 0x08, 0x29, 0xed, 0xa9, 0x33, 0x7d,
	0x99, 0x3e, 0x40, 0x5f, 0xb0, 0x43, 0xfc, 0x90, 0x14, 0x4d, 0x4a, 0x3d, 0x34, 0x27, 0x09, 0xbb,
	0xdf, 0xfe, 0x61, 0x77, 0x3f, 0x10, 0x9e, 0x8c, 0xa5, 0x50, 0x22, 0xee, 0x48, 0x4a, 0x3b, 0xd3,
	0x93, 0xe4, 0xa7, 0xad, 0x25, 0xa8, 0x3e, 0x3d, 0x69, 0x4b, 0x4a, 0xf1, 0xae, 0x05, 0x8c, 0x44,
	0xc8, 0x86, 0x09, 0x84, 0x8a, 0xe8, 0x86, 0x0f, 0x0c, 0x0a, 0xef, 0xdf, 0xd5, 0x8e, 0x46, 0x41,
	0x14, 0xc6, 0x56, 0x7f, 0x50, 0xd4, 0x87, 0x81, 0x0a, 0xc6, 0x82, 0x47, 0xca, 0x02, 0xb6, 0x8b,
	0x00, 0x29, 0xac, 0x2d, 0x39, 0x82, 0xb5, 0xf3, 0x89, 0xba, 0xf5, 0xd9, 0x87, 0x09, 0x8b, 0x15,
	0x6a, 0xc2, 0x8a, 0x12, 0xbf, 0xb1, 0xa8, 0xe5, 0x1d, 0x7a, 0xc7, 0xab, 0xbe, 0x39, 0x90, 0x0b,
	0x78, 0x60, 0x40, 0xf1, 0x58, 0x44, 0x31, 0x43, 0x8f, 0xa1, 0x1e, 0xab, 0x40, 0x4d, 0x62, 0x0d,
	0x6b, 0xf8, 0xf6, 0x84, 0x76, 0x60, 0x35, 0x64, 0x53, 0x4e, 0xd9, 0x15, 0x0f, 0x5b, 0x4b, 0xda,
	0x43, 0xc3, 0x08, 0xde, 0x84, 0x64, 0x1f, 0x76, 0x7b, 0x4c, 0x9d, 0x0f, 0x58, 0xa4, 0x2e, 0x74,
	0x75, 0x13, 0x19, 0x28, 0x2e, 0x22, 0x1b, 0x9a, 0xdc, 0xc2, 0x5e, 0x85, 0xde, 0x46, 0xed, 0xc1,
	0x3a, 0xcd, 0x2b, 0x74, 0xf0, 0xb5, 0xee, 0xd3, 0xf6, 0xf4, 0xa4, 0xad, 0x2b, 0x6b, 0xdf, 0x35,
	0xee, 0x2b, 0x21, 0x99, 0x3f, 0x6b, 0x47, 0x0e, 0x60, 0xfd, 0x35, 0x0b, 0x86, 0x59, 0xd5, 0x0f,
	0x61, 0x89, 0x87, 0xb6, 0xe4, 0x25, 0x1e, 0x92, 0x0e, 0x3c, 0x74, 0x00, 0x1b, 0x7b, 0x0f, 0x40,
	0x1a, 0xf0, 0x55, 0x8a, 0x5c, 0xb5, 0x92, 0x37, 0x21, 0xe9, 0x03, 0xee, 0xb3, 0x28, 0xbc, 0x30,
	0x7d, 0x71, 0x56, 0xce, 0xfd, 0x19, 0x34, 0xa4, 0x15, 0xd9, 0x9c, 0xb7, 0xb3, 0x9c, 0x8b, 0x36,
	0x29, 0x94, 0x9c, 0xc1, 0xca, 0xf7, 0x52, 0x0a, 0x89, 0x5a, 0x70, 0x7f, 0xc4, 0xe2, 0x38, 0x18,
	0x30, 0x1b, 0xd9, 0x1d, 0x11, 0x82, 0x65, 0x2a, 0x42, 0x66, 0xef, 0x5a, 0xff, 0x27, 0xef, 0x61,
	0xa7, 0x34, 0x97, 0x05, 0xbd, 0x3b, 0x82, 0x15, 0x96, 0x44, 0xd3, 0xbe, 0xd6, 0xba, 0xeb, 0x6d,
	0x33, 0x9a, 0x6d, 0x9d, 0x82, 0x6f, 0x74, 0xe4, 0x10, 0xf6, 0x7b, 0x4c, 0xa5, 0xae, 0x75, 0x79,
	0x7d, 0x25, 0x59, 0x30, 0x72, 0x5d, 0xfc, 0x19, 0x0e, 0x2a, 0x11, 0x36, 0x83, 0x2e, 0xdc, 0xb7,
	0x37, 0x67, 0x6f, 0xa3, 0x55, 0x72, 0x1b, 0x5a, 0xef, 0x3b, 0x20, 0x79, 0x01, 0x1b, 0x3f, 0x89,
	0x58, 0x5d, 0x06, 0x2a, 0x58, 0x54, 0x09, 0xf9, 0x16, 0x9a, 0x09, 0xf6, 0xed, 0x64, 0xa8, 0xb8,
	0x31, 0x30, 0x6d, 0x78, 0x0e, 0xcb, 0xc9, 0x62, 0xb4, 0xbc, 0xc3, 0x7b, 0xc7, 0x6b, 0xdd, 0xcd,
	0x2c, 0xe8, 0xa5, 0x5b, 0x17, 0x5f, 0x03, 0x48, 0x07, 0xb6, 0x0a, 0x0e, 0x16, 0x44, 0x6c, 0x02,
	0x32, 0x35, 0xe6, 0xd1, 0xe4, 0x6f, 0x0f, 0x9e, 0xf5, 0x98, 0xea, 0x4f, 0xae, 0x63, 0x2a, 0xf9,
	0x38, 0x37, 0xeb, 0x85, 0x0b, 0x99, 0x3f, 0x5c, 0xb9, 0xa8, 0x4b, 0x33, 0x1d, 0x6b, 0xba, 0x8e,
	0xdd, 0x33, 0xbb, 0xaa, 0x0f, 0xe8, 0x05, 0xd4, 0x95, 0x18, 0x73, 0x1a, 0xb7, 0x96, 0xf5, 0xe5,
	0x6e, 0x64, 0x75, 0xbe, 0xd3, 0xf2, 0xd7, 0x35, 0xdf, 0x22, 0x5e, 0xd5, 0xcd, 0x8d, 0x90, 0xbf,
	0x3c, 0x38, 0x9a, 0x9f, 0x69, 0xe9, 0x9e, 0xa0, 0xd3, 0x84, 0x2d, 0xc6, 0x9c, 0xda, 0x99, 0xd9,
	0xcb, 0x42, 0x19, 0xbb, 0xd9, 0x3d, 0x36, 0xd8, 0xa4, 0x9c, 0x80, 0xea, 0xfd, 0x35, 0x79, 0xdb,
	0x13, 0x51, 0xb0, 0xed, 0x33, 0xca, 0xd9, 0x94, 0xf9, 0x22, 0x7e, 0x6b, 0x06, 0x3c, 0xae, 0x8a,
	0xdc, 0x83, 0x47, 0x54, 0x44, 0x4a, 0x8a, 0xe1, 0x55, 0x4a, 0x76, 0x36, 0x0b, 0x9c, 0x9f, 0x26,
	0x0d, 0xc9, 0xfa, 0xbb, 0x41, 0x0b, 0x12, 0xc2, 0x01, 0x97, 0x45, 0xfd, 0x04, 0x9d, 0x21, 0xe7,
	0xb0, 0xd9, 0x63, 0xca, 0x57, 0xb4, 0xcf, 0x07, 0x51, 0x30, 0xcc, 0x51, 0xae, 0xb8, 0xb9, 0x61,
	0xd2, 0x51, 0xae, 0x3e, 0x24, 0xd2, 0x0f, 0x13, 0x26, 0xff, 0xb0, 0xab, 0x6d, 0x0e, 0xe4, 0x12,
	0x9a, 0xb3, 0x2e, 0xb2, 0xc1, 0x0c, 0xa2, 0xf8, 0x63, 0xea, 0xc4, 0x9e, 0xca, 0x13, 0xe9, 0xfe,
	0xd3, 0x80, 0x15, 0x4d, 0x95, 0xe8, 0x3b, 0x78, 0x94, 0x10, 0x3b, 0x8b, 0x14, 0xa7, 0x81, 0x62,
	0x46, 0xb8, 0xe9, 0x56, 0x3f, 0xf7, 0x30, 0xe0, 0xe6, 0xac, 0xd0, 0x8e, 0x78, 0x0d, 0xdd, 0xc0,
	0x56, 0x29, 0x6b, 0xa3, 0x67, 0xce, 0x60, 0x1e, 0xe9, 0xe3, 0xcf, 0x16, 0xa0, 0xd2, 0x38, 0xdf,
	0x40, 0xdd, 0x50, 0x32, 0x7a, 0xec, 0x4c, 0x66, 0x29, 0x1a, 0x6f, 0x15, 0xe5, 0x86, 0x39, 0x6a,
	0xc7, 0xde, 0x4b, 0x0f, 0x45, 0xf0, 0xa4, 0x82, 0x96, 0xd0, 0xe7, 0xb9, 0x14, 0xe6, 0x30, 0x1b,
	0x7e, 0xbe, 0x10, 0xe7, 0x92, 0x7d, 0xe9, 0xa1, 0x3f, 0xf5, 0x63, 0x57, 0xb9, 0x50, 0xe8, 0xcb,
	0x9c, 0xb3, 0x85, 0x04, 0x81, 0xbf, 0xf8, 0x6f, 0xe8, 0x7c, 0xc1, 0xbf, 0xc0, 0x66, 0xc9, 0x2b,
	0x80, 0x88, 0xf3, 0x54, 0xfd, 0x5c, 0xe1, 0xa3, 0xb9, 0x98, 0xb4, 0x23, 0xbf, 0xc2, 0x76, 0x09,
	0xc0, 0xd6, 0xf7, 0xff, 0xc5, 0xd1, 0xd5, 0x7c, 0x0d, 0x0d, 0x47, 0xff, 0xa8, 0x8c, 0xb8, 0x71,
	0xcb, 0xf9, 0x2a, 0xbe, 0x12, 0xa4, 0x86, 0x7e, 0x80, 0xf5, 0x19, 0x3a, 0x47, 0xbb, 0x79, 0x70,
	0xf1, 0x99, 0xc0, 0x7b, 0x15, 0xda, 0xd4, 0xdf, 0x39, 0x40, 0xc6, 0xf6, 0xe5, 0xe9, 0xe0, 0xb4,
	0xb4, 0xbb, 0xcf, 0x42, 0xed, 0xd8, 0x43, 0x01, 0x20, 0x9f, 0x51, 0xc6, 0x67, 0x58, 0x27, 0xbb,
	0xb4, 0x6a, 0x46, 0xc2, 0x4f, 0xe7, 0x61, 0xf2, 0x03, 0xf0, 0x23, 0x3c, 0xc8, 0x53, 0x45, 0x56,
	0x74, 0x19, 0x81, 0xe0, 0x9d, 0x72, 0x6d, 0xce, 0xe1, 0xab, 0xb3, 0xf7, 0xa7, 0x03, 0xae, 0x6e,
	0x27, 0xd7, 0x6d, 0x2a, 0x46, 0x9d, 0x77, 0x49, 0x59, 0x42, 0x7d, 0x14, 0x72, 0x18, 0x76, 0xa4,
	0xb8, 0x16, 0x8a, 0xff, 0xfe, 0x95, 0xfe, 0xa4, 0xec, 0xd8, 0x8f, 0x4d, 0xf3, 0xa1, 0x7b, 0x5d,
	0xd7, 0xc7, 0xd3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x72, 0x43, 0x93, 0x04, 0x0b, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	AuthenticateAgent(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	// GetAgentConfiguration returns the Agent configuration.
	GetAgentConfiguration(ctx context.Context, in *GetAgentConfigurationRequest, opts ...grpc.CallOption) (*GetAgentConfigurationResponse, error)
	// Health can be used to check if the Agent is running and its gRPC API is
	// available.
	Health(ctx context.Context, opts ...grpc.CallOption) (Agent_HealthClient, error)
	GetCommandRequestStream(ctx context.Context, in *GetCommandRequestStreamRequest, opts ...grpc.CallOption) (Agent_GetCommandRequestStreamClient, error)
	GetSubscriptionRequestStream(ctx context.Context, opts ...grpc.CallOption) (Agent_GetSubscriptionRequestStreamClient, error)
	// SendCommandResponse sends a response to a command request.
	SendCommandResponse(ctx context.Context, in *SendCommandResponseRequest, opts ...grpc.CallOption) (*SendCommandResponseResponse, error)
	SendCommandResponseStream(ctx context.Context, opts ...grpc.CallOption) (Agent_SendCommandResponseStreamClient, error)
	PostData(ctx context.Context, in *model.Datapoint, opts ...grpc.CallOption) (*PostDataResponse, error)
	PostMultiData(ctx context.Context, in *PostMultiDataRequest, opts ...grpc.CallOption) (*PostMultiDataResponse, error)
	// StreamData accepts a stream of data points. See PostData for information on
	// expected error conditions and codes.
	StreamData(ctx context.Context, opts ...grpc.CallOption) (Agent_StreamDataClient, error)
	ReceiveRosMessages(ctx context.Context, opts ...grpc.CallOption) (Agent_ReceiveRosMessagesClient, error)
	// Get rtc signal from Rcc server to agent
	GetRtcSignal(ctx context.Context, opts ...grpc.CallOption) (Agent_GetRtcSignalClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) AuthenticateAgent(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/AuthenticateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) GetAgentConfiguration(ctx context.Context, in *GetAgentConfigurationRequest, opts ...grpc.CallOption) (*GetAgentConfigurationResponse, error) {
	out := new(GetAgentConfigurationResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/GetAgentConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Health(ctx context.Context, opts ...grpc.CallOption) (Agent_HealthClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/v1.rcc.Agent/Health", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentHealthClient{stream}
	return x, nil
}

type Agent_HealthClient interface {
	Send(*HealthResponse) error
	Recv() (*HealthRequest, error)
	grpc.ClientStream
}

type agentHealthClient struct {
	grpc.ClientStream
}

func (x *agentHealthClient) Send(m *HealthResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentHealthClient) Recv() (*HealthRequest, error) {
	m := new(HealthRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) GetCommandRequestStream(ctx context.Context, in *GetCommandRequestStreamRequest, opts ...grpc.CallOption) (Agent_GetCommandRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[1], "/v1.rcc.Agent/GetCommandRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentGetCommandRequestStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_GetCommandRequestStreamClient interface {
	Recv() (*GetCommandRequestStreamResponse, error)
	grpc.ClientStream
}

type agentGetCommandRequestStreamClient struct {
	grpc.ClientStream
}

func (x *agentGetCommandRequestStreamClient) Recv() (*GetCommandRequestStreamResponse, error) {
	m := new(GetCommandRequestStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) GetSubscriptionRequestStream(ctx context.Context, opts ...grpc.CallOption) (Agent_GetSubscriptionRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[2], "/v1.rcc.Agent/GetSubscriptionRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentGetSubscriptionRequestStreamClient{stream}
	return x, nil
}

type Agent_GetSubscriptionRequestStreamClient interface {
	Send(*GetSubscriptionRequestStreamResponse) error
	Recv() (*GetSubscriptionRequestStreamRequest, error)
	grpc.ClientStream
}

type agentGetSubscriptionRequestStreamClient struct {
	grpc.ClientStream
}

func (x *agentGetSubscriptionRequestStreamClient) Send(m *GetSubscriptionRequestStreamResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentGetSubscriptionRequestStreamClient) Recv() (*GetSubscriptionRequestStreamRequest, error) {
	m := new(GetSubscriptionRequestStreamRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) SendCommandResponse(ctx context.Context, in *SendCommandResponseRequest, opts ...grpc.CallOption) (*SendCommandResponseResponse, error) {
	out := new(SendCommandResponseResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/SendCommandResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) SendCommandResponseStream(ctx context.Context, opts ...grpc.CallOption) (Agent_SendCommandResponseStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[3], "/v1.rcc.Agent/SendCommandResponseStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentSendCommandResponseStreamClient{stream}
	return x, nil
}

type Agent_SendCommandResponseStreamClient interface {
	Send(*SendCommandResponseRequest) error
	Recv() (*SendCommandResponseResponse, error)
	grpc.ClientStream
}

type agentSendCommandResponseStreamClient struct {
	grpc.ClientStream
}

func (x *agentSendCommandResponseStreamClient) Send(m *SendCommandResponseRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentSendCommandResponseStreamClient) Recv() (*SendCommandResponseResponse, error) {
	m := new(SendCommandResponseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) PostData(ctx context.Context, in *model.Datapoint, opts ...grpc.CallOption) (*PostDataResponse, error) {
	out := new(PostDataResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/PostData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) PostMultiData(ctx context.Context, in *PostMultiDataRequest, opts ...grpc.CallOption) (*PostMultiDataResponse, error) {
	out := new(PostMultiDataResponse)
	err := c.cc.Invoke(ctx, "/v1.rcc.Agent/PostMultiData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) StreamData(ctx context.Context, opts ...grpc.CallOption) (Agent_StreamDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[4], "/v1.rcc.Agent/StreamData", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentStreamDataClient{stream}
	return x, nil
}

type Agent_StreamDataClient interface {
	Send(*model.Datapoint) error
	CloseAndRecv() (*StreamDataResponse, error)
	grpc.ClientStream
}

type agentStreamDataClient struct {
	grpc.ClientStream
}

func (x *agentStreamDataClient) Send(m *model.Datapoint) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentStreamDataClient) CloseAndRecv() (*StreamDataResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StreamDataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) ReceiveRosMessages(ctx context.Context, opts ...grpc.CallOption) (Agent_ReceiveRosMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[5], "/v1.rcc.Agent/ReceiveRosMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentReceiveRosMessagesClient{stream}
	return x, nil
}

type Agent_ReceiveRosMessagesClient interface {
	Send(*RecieveRosMessagesResponse) error
	Recv() (*RecieveRosMessagesRequest, error)
	grpc.ClientStream
}

type agentReceiveRosMessagesClient struct {
	grpc.ClientStream
}

func (x *agentReceiveRosMessagesClient) Send(m *RecieveRosMessagesResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentReceiveRosMessagesClient) Recv() (*RecieveRosMessagesRequest, error) {
	m := new(RecieveRosMessagesRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) GetRtcSignal(ctx context.Context, opts ...grpc.CallOption) (Agent_GetRtcSignalClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[6], "/v1.rcc.Agent/GetRtcSignal", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentGetRtcSignalClient{stream}
	return x, nil
}

type Agent_GetRtcSignalClient interface {
	Send(*GetRtcSignalResponse) error
	Recv() (*GetRtcSignalRequest, error)
	grpc.ClientStream
}

type agentGetRtcSignalClient struct {
	grpc.ClientStream
}

func (x *agentGetRtcSignalClient) Send(m *GetRtcSignalResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentGetRtcSignalClient) Recv() (*GetRtcSignalRequest, error) {
	m := new(GetRtcSignalRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	AuthenticateAgent(context.Context, *AuthRequest) (*AuthResponse, error)
	// GetAgentConfiguration returns the Agent configuration.
	GetAgentConfiguration(context.Context, *GetAgentConfigurationRequest) (*GetAgentConfigurationResponse, error)
	// Health can be used to check if the Agent is running and its gRPC API is
	// available.
	Health(Agent_HealthServer) error
	GetCommandRequestStream(*GetCommandRequestStreamRequest, Agent_GetCommandRequestStreamServer) error
	GetSubscriptionRequestStream(Agent_GetSubscriptionRequestStreamServer) error
	// SendCommandResponse sends a response to a command request.
	SendCommandResponse(context.Context, *SendCommandResponseRequest) (*SendCommandResponseResponse, error)
	SendCommandResponseStream(Agent_SendCommandResponseStreamServer) error
	PostData(context.Context, *model.Datapoint) (*PostDataResponse, error)
	PostMultiData(context.Context, *PostMultiDataRequest) (*PostMultiDataResponse, error)
	// StreamData accepts a stream of data points. See PostData for information on
	// expected error conditions and codes.
	StreamData(Agent_StreamDataServer) error
	ReceiveRosMessages(Agent_ReceiveRosMessagesServer) error
	// Get rtc signal from Rcc server to agent
	GetRtcSignal(Agent_GetRtcSignalServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) AuthenticateAgent(ctx context.Context, req *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthenticateAgent not implemented")
}
func (*UnimplementedAgentServer) GetAgentConfiguration(ctx context.Context, req *GetAgentConfigurationRequest) (*GetAgentConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgentConfiguration not implemented")
}
func (*UnimplementedAgentServer) Health(srv Agent_HealthServer) error {
	return status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedAgentServer) GetCommandRequestStream(req *GetCommandRequestStreamRequest, srv Agent_GetCommandRequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCommandRequestStream not implemented")
}
func (*UnimplementedAgentServer) GetSubscriptionRequestStream(srv Agent_GetSubscriptionRequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSubscriptionRequestStream not implemented")
}
func (*UnimplementedAgentServer) SendCommandResponse(ctx context.Context, req *SendCommandResponseRequest) (*SendCommandResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCommandResponse not implemented")
}
func (*UnimplementedAgentServer) SendCommandResponseStream(srv Agent_SendCommandResponseStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SendCommandResponseStream not implemented")
}
func (*UnimplementedAgentServer) PostData(ctx context.Context, req *model.Datapoint) (*PostDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostData not implemented")
}
func (*UnimplementedAgentServer) PostMultiData(ctx context.Context, req *PostMultiDataRequest) (*PostMultiDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMultiData not implemented")
}
func (*UnimplementedAgentServer) StreamData(srv Agent_StreamDataServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamData not implemented")
}
func (*UnimplementedAgentServer) ReceiveRosMessages(srv Agent_ReceiveRosMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveRosMessages not implemented")
}
func (*UnimplementedAgentServer) GetRtcSignal(srv Agent_GetRtcSignalServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRtcSignal not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_AuthenticateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).AuthenticateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/AuthenticateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).AuthenticateAgent(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_GetAgentConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetAgentConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/GetAgentConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetAgentConfiguration(ctx, req.(*GetAgentConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Health_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).Health(&agentHealthServer{stream})
}

type Agent_HealthServer interface {
	Send(*HealthRequest) error
	Recv() (*HealthResponse, error)
	grpc.ServerStream
}

type agentHealthServer struct {
	grpc.ServerStream
}

func (x *agentHealthServer) Send(m *HealthRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentHealthServer) Recv() (*HealthResponse, error) {
	m := new(HealthResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_GetCommandRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCommandRequestStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).GetCommandRequestStream(m, &agentGetCommandRequestStreamServer{stream})
}

type Agent_GetCommandRequestStreamServer interface {
	Send(*GetCommandRequestStreamResponse) error
	grpc.ServerStream
}

type agentGetCommandRequestStreamServer struct {
	grpc.ServerStream
}

func (x *agentGetCommandRequestStreamServer) Send(m *GetCommandRequestStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Agent_GetSubscriptionRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).GetSubscriptionRequestStream(&agentGetSubscriptionRequestStreamServer{stream})
}

type Agent_GetSubscriptionRequestStreamServer interface {
	Send(*GetSubscriptionRequestStreamRequest) error
	Recv() (*GetSubscriptionRequestStreamResponse, error)
	grpc.ServerStream
}

type agentGetSubscriptionRequestStreamServer struct {
	grpc.ServerStream
}

func (x *agentGetSubscriptionRequestStreamServer) Send(m *GetSubscriptionRequestStreamRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentGetSubscriptionRequestStreamServer) Recv() (*GetSubscriptionRequestStreamResponse, error) {
	m := new(GetSubscriptionRequestStreamResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_SendCommandResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCommandResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).SendCommandResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/SendCommandResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).SendCommandResponse(ctx, req.(*SendCommandResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_SendCommandResponseStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).SendCommandResponseStream(&agentSendCommandResponseStreamServer{stream})
}

type Agent_SendCommandResponseStreamServer interface {
	Send(*SendCommandResponseResponse) error
	Recv() (*SendCommandResponseRequest, error)
	grpc.ServerStream
}

type agentSendCommandResponseStreamServer struct {
	grpc.ServerStream
}

func (x *agentSendCommandResponseStreamServer) Send(m *SendCommandResponseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentSendCommandResponseStreamServer) Recv() (*SendCommandResponseRequest, error) {
	m := new(SendCommandResponseRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_PostData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.Datapoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).PostData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/PostData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).PostData(ctx, req.(*model.Datapoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_PostMultiData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMultiDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).PostMultiData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.rcc.Agent/PostMultiData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).PostMultiData(ctx, req.(*PostMultiDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_StreamData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).StreamData(&agentStreamDataServer{stream})
}

type Agent_StreamDataServer interface {
	SendAndClose(*StreamDataResponse) error
	Recv() (*model.Datapoint, error)
	grpc.ServerStream
}

type agentStreamDataServer struct {
	grpc.ServerStream
}

func (x *agentStreamDataServer) SendAndClose(m *StreamDataResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentStreamDataServer) Recv() (*model.Datapoint, error) {
	m := new(model.Datapoint)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_ReceiveRosMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).ReceiveRosMessages(&agentReceiveRosMessagesServer{stream})
}

type Agent_ReceiveRosMessagesServer interface {
	Send(*RecieveRosMessagesRequest) error
	Recv() (*RecieveRosMessagesResponse, error)
	grpc.ServerStream
}

type agentReceiveRosMessagesServer struct {
	grpc.ServerStream
}

func (x *agentReceiveRosMessagesServer) Send(m *RecieveRosMessagesRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentReceiveRosMessagesServer) Recv() (*RecieveRosMessagesResponse, error) {
	m := new(RecieveRosMessagesResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Agent_GetRtcSignal_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).GetRtcSignal(&agentGetRtcSignalServer{stream})
}

type Agent_GetRtcSignalServer interface {
	Send(*GetRtcSignalRequest) error
	Recv() (*GetRtcSignalResponse, error)
	grpc.ServerStream
}

type agentGetRtcSignalServer struct {
	grpc.ServerStream
}

func (x *agentGetRtcSignalServer) Send(m *GetRtcSignalRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentGetRtcSignalServer) Recv() (*GetRtcSignalResponse, error) {
	m := new(GetRtcSignalResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.rcc.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthenticateAgent",
			Handler:    _Agent_AuthenticateAgent_Handler,
		},
		{
			MethodName: "GetAgentConfiguration",
			Handler:    _Agent_GetAgentConfiguration_Handler,
		},
		{
			MethodName: "SendCommandResponse",
			Handler:    _Agent_SendCommandResponse_Handler,
		},
		{
			MethodName: "PostData",
			Handler:    _Agent_PostData_Handler,
		},
		{
			MethodName: "PostMultiData",
			Handler:    _Agent_PostMultiData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Health",
			Handler:       _Agent_Health_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetCommandRequestStream",
			Handler:       _Agent_GetCommandRequestStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSubscriptionRequestStream",
			Handler:       _Agent_GetSubscriptionRequestStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SendCommandResponseStream",
			Handler:       _Agent_SendCommandResponseStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamData",
			Handler:       _Agent_StreamData_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceiveRosMessages",
			Handler:       _Agent_ReceiveRosMessages_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetRtcSignal",
			Handler:       _Agent_GetRtcSignal_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/rcc/v1/rcc.proto",
}
