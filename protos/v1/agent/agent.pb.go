// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: protos/agent/v1/agent.proto

package agent

import (
	context "context"
	model "github.com/TeamDotworld/robotix-proto/protos/v1/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Json struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Json) Reset() {
	*x = Json{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Json) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Json) ProtoMessage() {}

func (x *Json) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Json.ProtoReflect.Descriptor instead.
func (*Json) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{0}
}

func (x *Json) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetAgentConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAgentConfigurationRequest) Reset() {
	*x = GetAgentConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentConfigurationRequest) ProtoMessage() {}

func (x *GetAgentConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetAgentConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{1}
}

type GetAgentConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *model.AgentConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *GetAgentConfigurationResponse) Reset() {
	*x = GetAgentConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAgentConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentConfigurationResponse) ProtoMessage() {}

func (x *GetAgentConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetAgentConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{2}
}

func (x *GetAgentConfigurationResponse) GetConfiguration() *model.AgentConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{3}
}

type HealthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{4}
}

type SendCommandResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *model.CommandResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SendCommandResponseRequest) Reset() {
	*x = SendCommandResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponseRequest) ProtoMessage() {}

func (x *SendCommandResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponseRequest.ProtoReflect.Descriptor instead.
func (*SendCommandResponseRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{5}
}

func (x *SendCommandResponseRequest) GetResponse() *model.CommandResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{6}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SendCommandResponseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SendCommandResponseResponse) Reset() {
	*x = SendCommandResponseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponseResponse) ProtoMessage() {}

func (x *SendCommandResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponseResponse.ProtoReflect.Descriptor instead.
func (*SendCommandResponseResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{7}
}

func (x *SendCommandResponseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SendCommandResponseResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetCommandRequestStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandFilter []string `protobuf:"bytes,1,rep,name=command_filter,json=commandFilter,proto3" json:"command_filter,omitempty"`
}

func (x *GetCommandRequestStreamRequest) Reset() {
	*x = GetCommandRequestStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommandRequestStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandRequestStreamRequest) ProtoMessage() {}

func (x *GetCommandRequestStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandRequestStreamRequest.ProtoReflect.Descriptor instead.
func (*GetCommandRequestStreamRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{8}
}

func (x *GetCommandRequestStreamRequest) GetCommandFilter() []string {
	if x != nil {
		return x.CommandFilter
	}
	return nil
}

type GetCommandRequestStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *model.CommandRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetCommandRequestStreamResponse) Reset() {
	*x = GetCommandRequestStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommandRequestStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandRequestStreamResponse) ProtoMessage() {}

func (x *GetCommandRequestStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandRequestStreamResponse.ProtoReflect.Descriptor instead.
func (*GetCommandRequestStreamResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommandRequestStreamResponse) GetRequest() *model.CommandRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type PostDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PostDataResponse) Reset() {
	*x = PostDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDataResponse) ProtoMessage() {}

func (x *PostDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDataResponse.ProtoReflect.Descriptor instead.
func (*PostDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{10}
}

func (x *PostDataResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PostMultiDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*model.Datapoint `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PostMultiDataRequest) Reset() {
	*x = PostMultiDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMultiDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMultiDataRequest) ProtoMessage() {}

func (x *PostMultiDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMultiDataRequest.ProtoReflect.Descriptor instead.
func (*PostMultiDataRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{11}
}

func (x *PostMultiDataRequest) GetData() []*model.Datapoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type PostMultiDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PostMultiDataResponse) Reset() {
	*x = PostMultiDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMultiDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMultiDataResponse) ProtoMessage() {}

func (x *PostMultiDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMultiDataResponse.ProtoReflect.Descriptor instead.
func (*PostMultiDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{12}
}

func (x *PostMultiDataResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type StreamDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeleopStatus bool `protobuf:"varint,1,opt,name=teleop_status,json=teleopStatus,proto3" json:"teleop_status,omitempty"`
}

func (x *StreamDataRequest) Reset() {
	*x = StreamDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataRequest) ProtoMessage() {}

func (x *StreamDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataRequest.ProtoReflect.Descriptor instead.
func (*StreamDataRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{13}
}

func (x *StreamDataRequest) GetTeleopStatus() bool {
	if x != nil {
		return x.TeleopStatus
	}
	return false
}

type StreamDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*model.Datapoint `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *StreamDataResponse) Reset() {
	*x = StreamDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataResponse) ProtoMessage() {}

func (x *StreamDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataResponse.ProtoReflect.Descriptor instead.
func (*StreamDataResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{14}
}

func (x *StreamDataResponse) GetMessages() []*model.Datapoint {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetRosCommandConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRosCommandConfigRequest) Reset() {
	*x = GetRosCommandConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRosCommandConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRosCommandConfigRequest) ProtoMessage() {}

func (x *GetRosCommandConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRosCommandConfigRequest.ProtoReflect.Descriptor instead.
func (*GetRosCommandConfigRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{15}
}

type GetRosCommandConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetRosCommandConfigResponse) Reset() {
	*x = GetRosCommandConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRosCommandConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRosCommandConfigResponse) ProtoMessage() {}

func (x *GetRosCommandConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRosCommandConfigResponse.ProtoReflect.Descriptor instead.
func (*GetRosCommandConfigResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{16}
}

func (x *GetRosCommandConfigResponse) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type GetRosSubscriptionConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRosSubscriptionConfigRequest) Reset() {
	*x = GetRosSubscriptionConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRosSubscriptionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRosSubscriptionConfigRequest) ProtoMessage() {}

func (x *GetRosSubscriptionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRosSubscriptionConfigRequest.ProtoReflect.Descriptor instead.
func (*GetRosSubscriptionConfigRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{17}
}

type GetRosSubscriptionConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Json `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetRosSubscriptionConfigResponse) Reset() {
	*x = GetRosSubscriptionConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRosSubscriptionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRosSubscriptionConfigResponse) ProtoMessage() {}

func (x *GetRosSubscriptionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRosSubscriptionConfigResponse.ProtoReflect.Descriptor instead.
func (*GetRosSubscriptionConfigResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{18}
}

func (x *GetRosSubscriptionConfigResponse) GetConfig() *Json {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetSubscriptionRequestStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSubscriptionRequestStreamRequest) Reset() {
	*x = GetSubscriptionRequestStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionRequestStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequestStreamRequest) ProtoMessage() {}

func (x *GetSubscriptionRequestStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequestStreamRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequestStreamRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{19}
}

type GetSubscriptionRequestStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Topic  *model.StreamConfiguration `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Action string                     `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GetSubscriptionRequestStreamResponse) Reset() {
	*x = GetSubscriptionRequestStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionRequestStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequestStreamResponse) ProtoMessage() {}

func (x *GetSubscriptionRequestStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequestStreamResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequestStreamResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{20}
}

func (x *GetSubscriptionRequestStreamResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSubscriptionRequestStreamResponse) GetTopic() *model.StreamConfiguration {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *GetSubscriptionRequestStreamResponse) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type SendSubscriptionResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *model.SubscriptionsResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SendSubscriptionResponseRequest) Reset() {
	*x = SendSubscriptionResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSubscriptionResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSubscriptionResponseRequest) ProtoMessage() {}

func (x *SendSubscriptionResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSubscriptionResponseRequest.ProtoReflect.Descriptor instead.
func (*SendSubscriptionResponseRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{21}
}

func (x *SendSubscriptionResponseRequest) GetResponse() *model.SubscriptionsResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type SendSubscriptionResponseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SendSubscriptionResponseResponse) Reset() {
	*x = SendSubscriptionResponseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSubscriptionResponseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSubscriptionResponseResponse) ProtoMessage() {}

func (x *SendSubscriptionResponseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSubscriptionResponseResponse.ProtoReflect.Descriptor instead.
func (*SendSubscriptionResponseResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{22}
}

func (x *SendSubscriptionResponseResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SendSubscriptionResponseResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type RecieveRosMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ControlDatapoint *model.ControlDatapoint `protobuf:"bytes,2,opt,name=control_datapoint,json=controlDatapoint,proto3" json:"control_datapoint,omitempty"`
}

func (x *RecieveRosMessagesRequest) Reset() {
	*x = RecieveRosMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecieveRosMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecieveRosMessagesRequest) ProtoMessage() {}

func (x *RecieveRosMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecieveRosMessagesRequest.ProtoReflect.Descriptor instead.
func (*RecieveRosMessagesRequest) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{23}
}

func (x *RecieveRosMessagesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecieveRosMessagesRequest) GetControlDatapoint() *model.ControlDatapoint {
	if x != nil {
		return x.ControlDatapoint
	}
	return nil
}

type RecieveRosMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Error     string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RecieveRosMessagesResponse) Reset() {
	*x = RecieveRosMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_agent_v1_agent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecieveRosMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecieveRosMessagesResponse) ProtoMessage() {}

func (x *RecieveRosMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_agent_v1_agent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecieveRosMessagesResponse.ProtoReflect.Descriptor instead.
func (*RecieveRosMessagesResponse) Descriptor() ([]byte, []int) {
	return file_protos_agent_v1_agent_proto_rawDescGZIP(), []int{24}
}

func (x *RecieveRosMessagesResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RecieveRosMessagesResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RecieveRosMessagesResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_protos_agent_v1_agent_proto protoreflect.FileDescriptor

var file_protos_agent_v1_agent_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x76,
	0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x04, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x63, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x5c, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x47, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3f,
	0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x2f, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x38, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x6f, 0x70, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x65,
	0x6c, 0x65, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x12, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x35, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x25, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x83, 0x01, 0x0a,
	0x24, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x61, 0x0a, 0x20, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x74, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65,
	0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x1a, 0x52,
	0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xa2, 0x0a, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x6f, 0x73, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x6a, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x29, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x72, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x64, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x73, 0x0a,
	0x18, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6e, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x24, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x3d, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x52, 0x6f, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x69,
	0x65, 0x76, 0x65, 0x52, 0x6f, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x6f,
	0x74, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x69, 0x78, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_agent_v1_agent_proto_rawDescOnce sync.Once
	file_protos_agent_v1_agent_proto_rawDescData = file_protos_agent_v1_agent_proto_rawDesc
)

func file_protos_agent_v1_agent_proto_rawDescGZIP() []byte {
	file_protos_agent_v1_agent_proto_rawDescOnce.Do(func() {
		file_protos_agent_v1_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_agent_v1_agent_proto_rawDescData)
	})
	return file_protos_agent_v1_agent_proto_rawDescData
}

var file_protos_agent_v1_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_protos_agent_v1_agent_proto_goTypes = []interface{}{
	(*Json)(nil),                                 // 0: v1.agent.Json
	(*GetAgentConfigurationRequest)(nil),         // 1: v1.agent.GetAgentConfigurationRequest
	(*GetAgentConfigurationResponse)(nil),        // 2: v1.agent.GetAgentConfigurationResponse
	(*HealthRequest)(nil),                        // 3: v1.agent.HealthRequest
	(*HealthResponse)(nil),                       // 4: v1.agent.HealthResponse
	(*SendCommandResponseRequest)(nil),           // 5: v1.agent.SendCommandResponseRequest
	(*Error)(nil),                                // 6: v1.agent.Error
	(*SendCommandResponseResponse)(nil),          // 7: v1.agent.SendCommandResponseResponse
	(*GetCommandRequestStreamRequest)(nil),       // 8: v1.agent.GetCommandRequestStreamRequest
	(*GetCommandRequestStreamResponse)(nil),      // 9: v1.agent.GetCommandRequestStreamResponse
	(*PostDataResponse)(nil),                     // 10: v1.agent.PostDataResponse
	(*PostMultiDataRequest)(nil),                 // 11: v1.agent.PostMultiDataRequest
	(*PostMultiDataResponse)(nil),                // 12: v1.agent.PostMultiDataResponse
	(*StreamDataRequest)(nil),                    // 13: v1.agent.StreamDataRequest
	(*StreamDataResponse)(nil),                   // 14: v1.agent.StreamDataResponse
	(*GetRosCommandConfigRequest)(nil),           // 15: v1.agent.GetRosCommandConfigRequest
	(*GetRosCommandConfigResponse)(nil),          // 16: v1.agent.GetRosCommandConfigResponse
	(*GetRosSubscriptionConfigRequest)(nil),      // 17: v1.agent.GetRosSubscriptionConfigRequest
	(*GetRosSubscriptionConfigResponse)(nil),     // 18: v1.agent.GetRosSubscriptionConfigResponse
	(*GetSubscriptionRequestStreamRequest)(nil),  // 19: v1.agent.GetSubscriptionRequestStreamRequest
	(*GetSubscriptionRequestStreamResponse)(nil), // 20: v1.agent.GetSubscriptionRequestStreamResponse
	(*SendSubscriptionResponseRequest)(nil),      // 21: v1.agent.SendSubscriptionResponseRequest
	(*SendSubscriptionResponseResponse)(nil),     // 22: v1.agent.SendSubscriptionResponseResponse
	(*RecieveRosMessagesRequest)(nil),            // 23: v1.agent.RecieveRosMessagesRequest
	(*RecieveRosMessagesResponse)(nil),           // 24: v1.agent.RecieveRosMessagesResponse
	(*model.AgentConfiguration)(nil),             // 25: v1.model.AgentConfiguration
	(*model.CommandResponse)(nil),                // 26: v1.model.CommandResponse
	(*model.CommandRequest)(nil),                 // 27: v1.model.CommandRequest
	(*model.Datapoint)(nil),                      // 28: v1.model.Datapoint
	(*model.StreamConfiguration)(nil),            // 29: v1.model.StreamConfiguration
	(*model.SubscriptionsResponse)(nil),          // 30: v1.model.SubscriptionsResponse
	(*model.ControlDatapoint)(nil),               // 31: v1.model.ControlDatapoint
}
var file_protos_agent_v1_agent_proto_depIdxs = []int32{
	25, // 0: v1.agent.GetAgentConfigurationResponse.configuration:type_name -> v1.model.AgentConfiguration
	26, // 1: v1.agent.SendCommandResponseRequest.response:type_name -> v1.model.CommandResponse
	6,  // 2: v1.agent.SendCommandResponseResponse.error:type_name -> v1.agent.Error
	27, // 3: v1.agent.GetCommandRequestStreamResponse.request:type_name -> v1.model.CommandRequest
	28, // 4: v1.agent.PostMultiDataRequest.data:type_name -> v1.model.Datapoint
	28, // 5: v1.agent.StreamDataResponse.messages:type_name -> v1.model.Datapoint
	0,  // 6: v1.agent.GetRosSubscriptionConfigResponse.config:type_name -> v1.agent.Json
	29, // 7: v1.agent.GetSubscriptionRequestStreamResponse.topic:type_name -> v1.model.StreamConfiguration
	30, // 8: v1.agent.SendSubscriptionResponseRequest.response:type_name -> v1.model.SubscriptionsResponse
	6,  // 9: v1.agent.SendSubscriptionResponseResponse.error:type_name -> v1.agent.Error
	31, // 10: v1.agent.RecieveRosMessagesRequest.control_datapoint:type_name -> v1.model.ControlDatapoint
	1,  // 11: v1.agent.AgentRosBridge.GetAgentConfiguration:input_type -> v1.agent.GetAgentConfigurationRequest
	17, // 12: v1.agent.AgentRosBridge.GetRosSubscriptionConfig:input_type -> v1.agent.GetRosSubscriptionConfigRequest
	15, // 13: v1.agent.AgentRosBridge.GetRosCommandConfig:input_type -> v1.agent.GetRosCommandConfigRequest
	3,  // 14: v1.agent.AgentRosBridge.Health:input_type -> v1.agent.HealthRequest
	8,  // 15: v1.agent.AgentRosBridge.GetCommandRequestStream:input_type -> v1.agent.GetCommandRequestStreamRequest
	5,  // 16: v1.agent.AgentRosBridge.SendCommandResponse:input_type -> v1.agent.SendCommandResponseRequest
	19, // 17: v1.agent.AgentRosBridge.GetSubscriptionRequestStream:input_type -> v1.agent.GetSubscriptionRequestStreamRequest
	21, // 18: v1.agent.AgentRosBridge.SendSubscriptionResponse:input_type -> v1.agent.SendSubscriptionResponseRequest
	5,  // 19: v1.agent.AgentRosBridge.SendCommandResponseStream:input_type -> v1.agent.SendCommandResponseRequest
	28, // 20: v1.agent.AgentRosBridge.PostData:input_type -> v1.model.Datapoint
	11, // 21: v1.agent.AgentRosBridge.PostMultiData:input_type -> v1.agent.PostMultiDataRequest
	14, // 22: v1.agent.AgentRosBridge.StreamData:input_type -> v1.agent.StreamDataResponse
	24, // 23: v1.agent.AgentRosBridge.ReceiveRosMessages:input_type -> v1.agent.RecieveRosMessagesResponse
	2,  // 24: v1.agent.AgentRosBridge.GetAgentConfiguration:output_type -> v1.agent.GetAgentConfigurationResponse
	18, // 25: v1.agent.AgentRosBridge.GetRosSubscriptionConfig:output_type -> v1.agent.GetRosSubscriptionConfigResponse
	16, // 26: v1.agent.AgentRosBridge.GetRosCommandConfig:output_type -> v1.agent.GetRosCommandConfigResponse
	4,  // 27: v1.agent.AgentRosBridge.Health:output_type -> v1.agent.HealthResponse
	9,  // 28: v1.agent.AgentRosBridge.GetCommandRequestStream:output_type -> v1.agent.GetCommandRequestStreamResponse
	7,  // 29: v1.agent.AgentRosBridge.SendCommandResponse:output_type -> v1.agent.SendCommandResponseResponse
	20, // 30: v1.agent.AgentRosBridge.GetSubscriptionRequestStream:output_type -> v1.agent.GetSubscriptionRequestStreamResponse
	22, // 31: v1.agent.AgentRosBridge.SendSubscriptionResponse:output_type -> v1.agent.SendSubscriptionResponseResponse
	7,  // 32: v1.agent.AgentRosBridge.SendCommandResponseStream:output_type -> v1.agent.SendCommandResponseResponse
	10, // 33: v1.agent.AgentRosBridge.PostData:output_type -> v1.agent.PostDataResponse
	12, // 34: v1.agent.AgentRosBridge.PostMultiData:output_type -> v1.agent.PostMultiDataResponse
	13, // 35: v1.agent.AgentRosBridge.StreamData:output_type -> v1.agent.StreamDataRequest
	23, // 36: v1.agent.AgentRosBridge.ReceiveRosMessages:output_type -> v1.agent.RecieveRosMessagesRequest
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_protos_agent_v1_agent_proto_init() }
func file_protos_agent_v1_agent_proto_init() {
	if File_protos_agent_v1_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_agent_v1_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Json); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAgentConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommandResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendCommandResponseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommandRequestStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommandRequestStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMultiDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMultiDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRosCommandConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRosCommandConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRosSubscriptionConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRosSubscriptionConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionRequestStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscriptionRequestStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSubscriptionResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSubscriptionResponseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecieveRosMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_agent_v1_agent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecieveRosMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_agent_v1_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_agent_v1_agent_proto_goTypes,
		DependencyIndexes: file_protos_agent_v1_agent_proto_depIdxs,
		MessageInfos:      file_protos_agent_v1_agent_proto_msgTypes,
	}.Build()
	File_protos_agent_v1_agent_proto = out.File
	file_protos_agent_v1_agent_proto_rawDesc = nil
	file_protos_agent_v1_agent_proto_goTypes = nil
	file_protos_agent_v1_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentRosBridgeClient is the client API for AgentRosBridge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentRosBridgeClient interface {
	// GetAgentConfiguration returns the Agent configuration.
	GetAgentConfiguration(ctx context.Context, in *GetAgentConfigurationRequest, opts ...grpc.CallOption) (*GetAgentConfigurationResponse, error)
	// GetRosSubscriptionConfig service returns the agent's subscription config
	// (what topic to subscribe and their config) from the agent
	GetRosSubscriptionConfig(ctx context.Context, in *GetRosSubscriptionConfigRequest, opts ...grpc.CallOption) (*GetRosSubscriptionConfigResponse, error)
	// GetRosCommandConfig service returns the agent's command config
	// from the agent
	GetRosCommandConfig(ctx context.Context, in *GetRosCommandConfigRequest, opts ...grpc.CallOption) (*GetRosCommandConfigResponse, error)
	// (DEPRECATED) Health can be used to check if the Agent is running and its
	// gRPC API is available.
	Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error)
	// GetCommandRequestStream service receives command from the server both
	// "SERVICE" and "ACTION" commands. The Command should be configured in the
	// agent's config first. Unconfigured command is not accepted
	GetCommandRequestStream(ctx context.Context, in *GetCommandRequestStreamRequest, opts ...grpc.CallOption) (AgentRosBridge_GetCommandRequestStreamClient, error)
	// SendCommandResponse service sends command response (Just response if it is
	// service call, if Action call it sends both result and feedback ) for a
	// particular command to the server.
	SendCommandResponse(ctx context.Context, in *SendCommandResponseRequest, opts ...grpc.CallOption) (*SendCommandResponseResponse, error)
	// GetSubscriptionRequestStream service recieves subscription related commands
	// such as "SUBSCRIBE", "UNSUBSCRIBE" and sends back the response to the
	// server. This is previously implemented for node sdk with grpc, and not
	// work with current implementation.
	GetSubscriptionRequestStream(ctx context.Context, in *GetSubscriptionRequestStreamRequest, opts ...grpc.CallOption) (AgentRosBridge_GetSubscriptionRequestStreamClient, error)
	// SendSubscriptionResponse sends subscribed topic messages back to Rcc server
	SendSubscriptionResponse(ctx context.Context, in *SendSubscriptionResponseRequest, opts ...grpc.CallOption) (*SendSubscriptionResponseResponse, error)
	// (DEPRECATED) SendCommandResponseStream sends command response from agent to
	// rcc. It is deprecated using SendCommandResponse service instead.
	SendCommandResponseStream(ctx context.Context, opts ...grpc.CallOption) (AgentRosBridge_SendCommandResponseStreamClient, error)
	// PostData service sends single datapoints from agent to rcc. These
	// points include ros messages or system stats which is then sent to influx at
	// the server.
	PostData(ctx context.Context, in *model.Datapoint, opts ...grpc.CallOption) (*PostDataResponse, error)
	// PostMultiData service sends multiple datapoints from agent to rcc. These
	// points include ros messages or system stats which is then sent to influx at
	// the server.
	PostMultiData(ctx context.Context, in *PostMultiDataRequest, opts ...grpc.CallOption) (*PostMultiDataResponse, error)
	// StreamData sends telemetry datapoints from rosnode to agent. This is used
	// for receiving telop data such as pose, realsense camera feed etc. from ros
	// node to agent and then agent sends the data to the client using webrtc
	// datachannel
	StreamData(ctx context.Context, opts ...grpc.CallOption) (AgentRosBridge_StreamDataClient, error)
	// ReceiveRosMessages service is established between rosnode and agent. It
	// gets ros messages which needs to be published such as command velocity
	// messages, camera control messages from agent and then pubslishes to ros.
	ReceiveRosMessages(ctx context.Context, opts ...grpc.CallOption) (AgentRosBridge_ReceiveRosMessagesClient, error)
}

type agentRosBridgeClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentRosBridgeClient(cc grpc.ClientConnInterface) AgentRosBridgeClient {
	return &agentRosBridgeClient{cc}
}

func (c *agentRosBridgeClient) GetAgentConfiguration(ctx context.Context, in *GetAgentConfigurationRequest, opts ...grpc.CallOption) (*GetAgentConfigurationResponse, error) {
	out := new(GetAgentConfigurationResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/GetAgentConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) GetRosSubscriptionConfig(ctx context.Context, in *GetRosSubscriptionConfigRequest, opts ...grpc.CallOption) (*GetRosSubscriptionConfigResponse, error) {
	out := new(GetRosSubscriptionConfigResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/GetRosSubscriptionConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) GetRosCommandConfig(ctx context.Context, in *GetRosCommandConfigRequest, opts ...grpc.CallOption) (*GetRosCommandConfigResponse, error) {
	out := new(GetRosCommandConfigResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/GetRosCommandConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) GetCommandRequestStream(ctx context.Context, in *GetCommandRequestStreamRequest, opts ...grpc.CallOption) (AgentRosBridge_GetCommandRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentRosBridge_serviceDesc.Streams[0], "/v1.agent.AgentRosBridge/GetCommandRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRosBridgeGetCommandRequestStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AgentRosBridge_GetCommandRequestStreamClient interface {
	Recv() (*GetCommandRequestStreamResponse, error)
	grpc.ClientStream
}

type agentRosBridgeGetCommandRequestStreamClient struct {
	grpc.ClientStream
}

func (x *agentRosBridgeGetCommandRequestStreamClient) Recv() (*GetCommandRequestStreamResponse, error) {
	m := new(GetCommandRequestStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentRosBridgeClient) SendCommandResponse(ctx context.Context, in *SendCommandResponseRequest, opts ...grpc.CallOption) (*SendCommandResponseResponse, error) {
	out := new(SendCommandResponseResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/SendCommandResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) GetSubscriptionRequestStream(ctx context.Context, in *GetSubscriptionRequestStreamRequest, opts ...grpc.CallOption) (AgentRosBridge_GetSubscriptionRequestStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentRosBridge_serviceDesc.Streams[1], "/v1.agent.AgentRosBridge/GetSubscriptionRequestStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRosBridgeGetSubscriptionRequestStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AgentRosBridge_GetSubscriptionRequestStreamClient interface {
	Recv() (*GetSubscriptionRequestStreamResponse, error)
	grpc.ClientStream
}

type agentRosBridgeGetSubscriptionRequestStreamClient struct {
	grpc.ClientStream
}

func (x *agentRosBridgeGetSubscriptionRequestStreamClient) Recv() (*GetSubscriptionRequestStreamResponse, error) {
	m := new(GetSubscriptionRequestStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentRosBridgeClient) SendSubscriptionResponse(ctx context.Context, in *SendSubscriptionResponseRequest, opts ...grpc.CallOption) (*SendSubscriptionResponseResponse, error) {
	out := new(SendSubscriptionResponseResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/SendSubscriptionResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) SendCommandResponseStream(ctx context.Context, opts ...grpc.CallOption) (AgentRosBridge_SendCommandResponseStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentRosBridge_serviceDesc.Streams[2], "/v1.agent.AgentRosBridge/SendCommandResponseStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRosBridgeSendCommandResponseStreamClient{stream}
	return x, nil
}

type AgentRosBridge_SendCommandResponseStreamClient interface {
	Send(*SendCommandResponseRequest) error
	Recv() (*SendCommandResponseResponse, error)
	grpc.ClientStream
}

type agentRosBridgeSendCommandResponseStreamClient struct {
	grpc.ClientStream
}

func (x *agentRosBridgeSendCommandResponseStreamClient) Send(m *SendCommandResponseRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentRosBridgeSendCommandResponseStreamClient) Recv() (*SendCommandResponseResponse, error) {
	m := new(SendCommandResponseResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentRosBridgeClient) PostData(ctx context.Context, in *model.Datapoint, opts ...grpc.CallOption) (*PostDataResponse, error) {
	out := new(PostDataResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/PostData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) PostMultiData(ctx context.Context, in *PostMultiDataRequest, opts ...grpc.CallOption) (*PostMultiDataResponse, error) {
	out := new(PostMultiDataResponse)
	err := c.cc.Invoke(ctx, "/v1.agent.AgentRosBridge/PostMultiData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentRosBridgeClient) StreamData(ctx context.Context, opts ...grpc.CallOption) (AgentRosBridge_StreamDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentRosBridge_serviceDesc.Streams[3], "/v1.agent.AgentRosBridge/StreamData", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRosBridgeStreamDataClient{stream}
	return x, nil
}

type AgentRosBridge_StreamDataClient interface {
	Send(*StreamDataResponse) error
	Recv() (*StreamDataRequest, error)
	grpc.ClientStream
}

type agentRosBridgeStreamDataClient struct {
	grpc.ClientStream
}

func (x *agentRosBridgeStreamDataClient) Send(m *StreamDataResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentRosBridgeStreamDataClient) Recv() (*StreamDataRequest, error) {
	m := new(StreamDataRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentRosBridgeClient) ReceiveRosMessages(ctx context.Context, opts ...grpc.CallOption) (AgentRosBridge_ReceiveRosMessagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentRosBridge_serviceDesc.Streams[4], "/v1.agent.AgentRosBridge/ReceiveRosMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentRosBridgeReceiveRosMessagesClient{stream}
	return x, nil
}

type AgentRosBridge_ReceiveRosMessagesClient interface {
	Send(*RecieveRosMessagesResponse) error
	Recv() (*RecieveRosMessagesRequest, error)
	grpc.ClientStream
}

type agentRosBridgeReceiveRosMessagesClient struct {
	grpc.ClientStream
}

func (x *agentRosBridgeReceiveRosMessagesClient) Send(m *RecieveRosMessagesResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentRosBridgeReceiveRosMessagesClient) Recv() (*RecieveRosMessagesRequest, error) {
	m := new(RecieveRosMessagesRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentRosBridgeServer is the server API for AgentRosBridge service.
type AgentRosBridgeServer interface {
	// GetAgentConfiguration returns the Agent configuration.
	GetAgentConfiguration(context.Context, *GetAgentConfigurationRequest) (*GetAgentConfigurationResponse, error)
	// GetRosSubscriptionConfig service returns the agent's subscription config
	// (what topic to subscribe and their config) from the agent
	GetRosSubscriptionConfig(context.Context, *GetRosSubscriptionConfigRequest) (*GetRosSubscriptionConfigResponse, error)
	// GetRosCommandConfig service returns the agent's command config
	// from the agent
	GetRosCommandConfig(context.Context, *GetRosCommandConfigRequest) (*GetRosCommandConfigResponse, error)
	// (DEPRECATED) Health can be used to check if the Agent is running and its
	// gRPC API is available.
	Health(context.Context, *HealthRequest) (*HealthResponse, error)
	// GetCommandRequestStream service receives command from the server both
	// "SERVICE" and "ACTION" commands. The Command should be configured in the
	// agent's config first. Unconfigured command is not accepted
	GetCommandRequestStream(*GetCommandRequestStreamRequest, AgentRosBridge_GetCommandRequestStreamServer) error
	// SendCommandResponse service sends command response (Just response if it is
	// service call, if Action call it sends both result and feedback ) for a
	// particular command to the server.
	SendCommandResponse(context.Context, *SendCommandResponseRequest) (*SendCommandResponseResponse, error)
	// GetSubscriptionRequestStream service recieves subscription related commands
	// such as "SUBSCRIBE", "UNSUBSCRIBE" and sends back the response to the
	// server. This is previously implemented for node sdk with grpc, and not
	// work with current implementation.
	GetSubscriptionRequestStream(*GetSubscriptionRequestStreamRequest, AgentRosBridge_GetSubscriptionRequestStreamServer) error
	// SendSubscriptionResponse sends subscribed topic messages back to Rcc server
	SendSubscriptionResponse(context.Context, *SendSubscriptionResponseRequest) (*SendSubscriptionResponseResponse, error)
	// (DEPRECATED) SendCommandResponseStream sends command response from agent to
	// rcc. It is deprecated using SendCommandResponse service instead.
	SendCommandResponseStream(AgentRosBridge_SendCommandResponseStreamServer) error
	// PostData service sends single datapoints from agent to rcc. These
	// points include ros messages or system stats which is then sent to influx at
	// the server.
	PostData(context.Context, *model.Datapoint) (*PostDataResponse, error)
	// PostMultiData service sends multiple datapoints from agent to rcc. These
	// points include ros messages or system stats which is then sent to influx at
	// the server.
	PostMultiData(context.Context, *PostMultiDataRequest) (*PostMultiDataResponse, error)
	// StreamData sends telemetry datapoints from rosnode to agent. This is used
	// for receiving telop data such as pose, realsense camera feed etc. from ros
	// node to agent and then agent sends the data to the client using webrtc
	// datachannel
	StreamData(AgentRosBridge_StreamDataServer) error
	// ReceiveRosMessages service is established between rosnode and agent. It
	// gets ros messages which needs to be published such as command velocity
	// messages, camera control messages from agent and then pubslishes to ros.
	ReceiveRosMessages(AgentRosBridge_ReceiveRosMessagesServer) error
}

// UnimplementedAgentRosBridgeServer can be embedded to have forward compatible implementations.
type UnimplementedAgentRosBridgeServer struct {
}

func (*UnimplementedAgentRosBridgeServer) GetAgentConfiguration(context.Context, *GetAgentConfigurationRequest) (*GetAgentConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAgentConfiguration not implemented")
}
func (*UnimplementedAgentRosBridgeServer) GetRosSubscriptionConfig(context.Context, *GetRosSubscriptionConfigRequest) (*GetRosSubscriptionConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRosSubscriptionConfig not implemented")
}
func (*UnimplementedAgentRosBridgeServer) GetRosCommandConfig(context.Context, *GetRosCommandConfigRequest) (*GetRosCommandConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRosCommandConfig not implemented")
}
func (*UnimplementedAgentRosBridgeServer) Health(context.Context, *HealthRequest) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedAgentRosBridgeServer) GetCommandRequestStream(*GetCommandRequestStreamRequest, AgentRosBridge_GetCommandRequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCommandRequestStream not implemented")
}
func (*UnimplementedAgentRosBridgeServer) SendCommandResponse(context.Context, *SendCommandResponseRequest) (*SendCommandResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCommandResponse not implemented")
}
func (*UnimplementedAgentRosBridgeServer) GetSubscriptionRequestStream(*GetSubscriptionRequestStreamRequest, AgentRosBridge_GetSubscriptionRequestStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSubscriptionRequestStream not implemented")
}
func (*UnimplementedAgentRosBridgeServer) SendSubscriptionResponse(context.Context, *SendSubscriptionResponseRequest) (*SendSubscriptionResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendSubscriptionResponse not implemented")
}
func (*UnimplementedAgentRosBridgeServer) SendCommandResponseStream(AgentRosBridge_SendCommandResponseStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method SendCommandResponseStream not implemented")
}
func (*UnimplementedAgentRosBridgeServer) PostData(context.Context, *model.Datapoint) (*PostDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostData not implemented")
}
func (*UnimplementedAgentRosBridgeServer) PostMultiData(context.Context, *PostMultiDataRequest) (*PostMultiDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostMultiData not implemented")
}
func (*UnimplementedAgentRosBridgeServer) StreamData(AgentRosBridge_StreamDataServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamData not implemented")
}
func (*UnimplementedAgentRosBridgeServer) ReceiveRosMessages(AgentRosBridge_ReceiveRosMessagesServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveRosMessages not implemented")
}

func RegisterAgentRosBridgeServer(s *grpc.Server, srv AgentRosBridgeServer) {
	s.RegisterService(&_AgentRosBridge_serviceDesc, srv)
}

func _AgentRosBridge_GetAgentConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentConfigurationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).GetAgentConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/GetAgentConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).GetAgentConfiguration(ctx, req.(*GetAgentConfigurationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_GetRosSubscriptionConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRosSubscriptionConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).GetRosSubscriptionConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/GetRosSubscriptionConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).GetRosSubscriptionConfig(ctx, req.(*GetRosSubscriptionConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_GetRosCommandConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRosCommandConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).GetRosCommandConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/GetRosCommandConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).GetRosCommandConfig(ctx, req.(*GetRosCommandConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).Health(ctx, req.(*HealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_GetCommandRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCommandRequestStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentRosBridgeServer).GetCommandRequestStream(m, &agentRosBridgeGetCommandRequestStreamServer{stream})
}

type AgentRosBridge_GetCommandRequestStreamServer interface {
	Send(*GetCommandRequestStreamResponse) error
	grpc.ServerStream
}

type agentRosBridgeGetCommandRequestStreamServer struct {
	grpc.ServerStream
}

func (x *agentRosBridgeGetCommandRequestStreamServer) Send(m *GetCommandRequestStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _AgentRosBridge_SendCommandResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendCommandResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).SendCommandResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/SendCommandResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).SendCommandResponse(ctx, req.(*SendCommandResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_GetSubscriptionRequestStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetSubscriptionRequestStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentRosBridgeServer).GetSubscriptionRequestStream(m, &agentRosBridgeGetSubscriptionRequestStreamServer{stream})
}

type AgentRosBridge_GetSubscriptionRequestStreamServer interface {
	Send(*GetSubscriptionRequestStreamResponse) error
	grpc.ServerStream
}

type agentRosBridgeGetSubscriptionRequestStreamServer struct {
	grpc.ServerStream
}

func (x *agentRosBridgeGetSubscriptionRequestStreamServer) Send(m *GetSubscriptionRequestStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _AgentRosBridge_SendSubscriptionResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendSubscriptionResponseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).SendSubscriptionResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/SendSubscriptionResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).SendSubscriptionResponse(ctx, req.(*SendSubscriptionResponseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_SendCommandResponseStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentRosBridgeServer).SendCommandResponseStream(&agentRosBridgeSendCommandResponseStreamServer{stream})
}

type AgentRosBridge_SendCommandResponseStreamServer interface {
	Send(*SendCommandResponseResponse) error
	Recv() (*SendCommandResponseRequest, error)
	grpc.ServerStream
}

type agentRosBridgeSendCommandResponseStreamServer struct {
	grpc.ServerStream
}

func (x *agentRosBridgeSendCommandResponseStreamServer) Send(m *SendCommandResponseResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentRosBridgeSendCommandResponseStreamServer) Recv() (*SendCommandResponseRequest, error) {
	m := new(SendCommandResponseRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AgentRosBridge_PostData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.Datapoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).PostData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/PostData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).PostData(ctx, req.(*model.Datapoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_PostMultiData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostMultiDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentRosBridgeServer).PostMultiData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.agent.AgentRosBridge/PostMultiData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentRosBridgeServer).PostMultiData(ctx, req.(*PostMultiDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentRosBridge_StreamData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentRosBridgeServer).StreamData(&agentRosBridgeStreamDataServer{stream})
}

type AgentRosBridge_StreamDataServer interface {
	Send(*StreamDataRequest) error
	Recv() (*StreamDataResponse, error)
	grpc.ServerStream
}

type agentRosBridgeStreamDataServer struct {
	grpc.ServerStream
}

func (x *agentRosBridgeStreamDataServer) Send(m *StreamDataRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentRosBridgeStreamDataServer) Recv() (*StreamDataResponse, error) {
	m := new(StreamDataResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AgentRosBridge_ReceiveRosMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentRosBridgeServer).ReceiveRosMessages(&agentRosBridgeReceiveRosMessagesServer{stream})
}

type AgentRosBridge_ReceiveRosMessagesServer interface {
	Send(*RecieveRosMessagesRequest) error
	Recv() (*RecieveRosMessagesResponse, error)
	grpc.ServerStream
}

type agentRosBridgeReceiveRosMessagesServer struct {
	grpc.ServerStream
}

func (x *agentRosBridgeReceiveRosMessagesServer) Send(m *RecieveRosMessagesRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentRosBridgeReceiveRosMessagesServer) Recv() (*RecieveRosMessagesResponse, error) {
	m := new(RecieveRosMessagesResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AgentRosBridge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.agent.AgentRosBridge",
	HandlerType: (*AgentRosBridgeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAgentConfiguration",
			Handler:    _AgentRosBridge_GetAgentConfiguration_Handler,
		},
		{
			MethodName: "GetRosSubscriptionConfig",
			Handler:    _AgentRosBridge_GetRosSubscriptionConfig_Handler,
		},
		{
			MethodName: "GetRosCommandConfig",
			Handler:    _AgentRosBridge_GetRosCommandConfig_Handler,
		},
		{
			MethodName: "Health",
			Handler:    _AgentRosBridge_Health_Handler,
		},
		{
			MethodName: "SendCommandResponse",
			Handler:    _AgentRosBridge_SendCommandResponse_Handler,
		},
		{
			MethodName: "SendSubscriptionResponse",
			Handler:    _AgentRosBridge_SendSubscriptionResponse_Handler,
		},
		{
			MethodName: "PostData",
			Handler:    _AgentRosBridge_PostData_Handler,
		},
		{
			MethodName: "PostMultiData",
			Handler:    _AgentRosBridge_PostMultiData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCommandRequestStream",
			Handler:       _AgentRosBridge_GetCommandRequestStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSubscriptionRequestStream",
			Handler:       _AgentRosBridge_GetSubscriptionRequestStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendCommandResponseStream",
			Handler:       _AgentRosBridge_SendCommandResponseStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "StreamData",
			Handler:       _AgentRosBridge_StreamData_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ReceiveRosMessages",
			Handler:       _AgentRosBridge_ReceiveRosMessages_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/agent/v1/agent.proto",
}
